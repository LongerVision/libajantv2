/**
@page	toolsandutilities

@section	usingntv2watcher		“NTV2Watcher”

This page describes how to use the <b>NTV2 Watcher</b> tool to interactively monitor and control an AJA device.

\ref inspectorgeneralop
	-	Device Selection
	-	Common Settings
	-	<b>Inspectors</b>
		-	\ref inspectorframebuffer — Views/edits device frame buffer memory
		-	\ref inspectoraudio — Views/edits device audio buffer memory
		-	\ref inspectoranc — Monitors device ancillary data
		-	\ref inspectorac — Monitors driver \ref aboutautocirculate status
		-	\ref inspectormixerkeyer — Views/edits Mixer/Keyer state
		-	\ref inspectorlut — Views/edits LUTs
		-	\ref inspectorregs — Views/edits registers
		-	\ref inspectorroute — Views/edits device widget routing
	-	Global Settings
		-	\ref watcherprefs — Sets global preferences

<b>Tool Windows:</b>
	-	\ref fillbufferdlog — for changing the contents of frame buffer memory
	-	\ref anc608viewer — for viewing/setting EIA608 captions
	-	\ref regautocycler — for periodically changing a register value
	-	\ref tonegenerator — writes tone values into an audio buffer
	-	\ref memmapdlog — shows device memory utilization
	-	\ref scraptool — displays contents of arbitrary host buffers
	-	\ref demostool — configures and runs demo apps
	-	\ref debugstats — displays AJA debug stats
	-	\ref debuglog — displays AJA debug logs



<hr size="50px">
@subsection	inspectorgeneralop		General Operation

The <b>NTV2 Watcher</b> is a graphical tool that interactively monitors and configures an NTV2 device.

@image	html	watcherlayout.png

The user interface consists of a main window that contains these major elements:
-	<b>Common Device Controls</b> — These Toolbars are common to all devices (and can be undocked, if desired):
	-	<b>Device Selection</b> Toolbar — for selecting which device to monitor/control;
	-	<b>Common Controls</b> Toolbar — for changing the poll rate, task mode, and other “global” aspects of the device.
-	<b>Inspector List</b> — for selecting which aspect of the device to inspect and/or control;
-	<b>Inspector Display Area</b> — the main data display area;
-	<b>Status Bar</b> — which holds the status indicators:
	-	<b>Status Message</b> — Some inspectors will display messages here in certain situations.
	-	<b>Selection Indicator</b> — Some inspectors allow data portions to be selected interactively using the keyboard or mouse.
		This part of the Status Bar briefly describes the current selection.
	-	<b>Endianness</b> — Some inspectors display 2, 4, or 8-byte numbers.
		This indicator shows the current endianness of the data display as <b>BE</b> (“Big Endian”) or <b>LE</b> (“Little Endian”).
		-	It’s colored Green if it’s the native endianness for the host processor.
		-	It’s colored Yellow if it’s not native.
	-	<b>Die Temperature</b> — Indicates the instantaneous measured die temperature of the device’s FPGA.
		-	It’s colored Green if the temperature is at or below normal.
		-	It’s colored Yellow if the temperature is slightly above normal.
		-	It’s colored Red if the temperature is significantly above normal.
	-	<b>Refresh Rate</b> — Indicates the actual measured refresh rate of the main window’s active inspector
		(a moving average).
		-	The refresh rate of detached inspector windows is not measured.
		-	The indicator shows “N/A” when polling is disabled (i.e. when the <b>Poll</b> checkbox is not checked/ticked).
		-	The indicator is Green if the measured refresh rate is what’s expected:
			-	For inspectors tied to the VBI, it must be no more than the expected frame rate.
			-	For all other inspectors, it must be no greater than the polling <b>Interval</b> slider setting.
		-	It’s colored Yellow if the measured rate lags the expected rate by less than about 5%.
		-	It’s colored Red if the measured rate lags the expected rate by more than approximately 5%.


@par	Device Selection

A single instance of <b>NTV2 Watcher</b> monitors and/or controls one AJA device at a time.
This panel provides a menu for choosing which AJA device the tool will focus on.

The top of the menu is populated with devices that are installed or attached directly to the host.
It’s followed by the “<b>Manage Other Devices…</b>” command, which opens the <b>Manage Devices</b> tool window.
The bottom section of the menu is populated with the <b>Known Remote Devices</b> (see below).

Choosing a different device in the menu causes <b>NTV2Watcher</b> to stop monitoring the previously-selected
device, and starts monitoring the newly-selected one. Depending on the device and its capabilities,
the list of available inspectors may change.

<b>“Manage Devices” Window</b>

@image	html	watcher-deviceselection.png

This tool window is for…
-	<b>Remote Devices</b> — to find remote devices on other hosts in your LAN to monitor and/or control:
	-	To add a remote device to the list of <b>Known Remote Devices</b>:
		-	Type its IP address or DNS name in the provided text box.
		-	If the remote “nub” uses a port number other than 7575, enter its port number in the <b>Port:</b> box.
		-	When NTV2Watcher is able to successfully communicate with the remote “nub”, the <b>Add</b> button will become enabled.
		-	Click <b>Add</b> to add the remote device to the <b>Known Remote Devices</b> list.
	-	To remove a remote device from the <b>Known Remote Devices</b> list:
		-	Right-click on the remote device to be removed.
		-	Choose the appropriate <b>Remove</b> command from the menu.
-	<b>Publish Devices</b> — to publish a locally attached/installed host device (to allow other hosts to connect to it).
		-	This runs or stops a local “NTV2 Nub” server.
-	<b>Software Devices</b> — to configure AJA “software” devices.


@par	Menu Commands

Here’s what’s in the menu bar:
-	<b>File</b> Menu
	-	<b>Save As…</b> — Saves (exports) “raw” data for the \ref inspectorframebuffer and \ref inspectoraudio.
	-	<b>Print…</b> — Prints the diagram and code panels for the \ref inspectorroute.
	-	<b>Quit</b> (Linux & Windows only) — Closes/exits the tool.
-	<b>Edit</b> Menu
	-	<b>Cut</b> — Disabled.
	-	<b>Copy</b> — Copies the currently highlighted/selected data, if any, to the host computer’s clipboard.
	-	<b>Paste</b> — Pastes the host computer’s clipboard contents into the current inspector’s data view, if possible.
	-	<b>Clear</b> — Deletes or zero’s the currently highlighted/selected data, if possible.
	-	<b>Select All</b> — Highlights/selects everything in the current inspector’s data view, if possible.
-	<b>View</b> Menu
	-	<b>Memory Map</b> — Shows/Hides the \ref memmapdlog.
	-	<b>CEA608 Monitor</b> — Shows/Hides the \ref anc608viewer.
	-	<b>Fill Buffers</b> — Shows/Hides the \ref fillbufferdlog.
	-	<b>Register Cycler</b> — Shows/Hides the \ref regautocycler.
	-	<b>Tone Generator</b> — Shows/Hides the \ref tonegenerator.
	-	<b>Scrap Buffer</b> — Shows/Hides the \ref scraptool.
	-	<b>SDK Demos</b> — Shows/Hides the \ref demostool.
	-	<b>AJADebug Stats</b> — Shows/Hides the \ref debugstats.
	-	<b>AJADebug Log</b> — Shows/Hides the \ref debuglog.
	-	<b>Register Name</b> — <i>(IP Device inspectors only)</i> — Shows/Hides register names.
	-	<b>Hex Reg Numbers</b> — <i>(IP Device inspectors only)</i> — Toggles showing IP Device register numbers in hexadecimal or decimal.
	-	<b>Register Address</b> — <i>(IP Device inspectors only)</i> — Displays IP Device registers as a hexadecimal (BAR) address.
	-	<b>Register Offset</b> — <i>(IP Device inspectors only)</i> — Displays IP Device registers as a byte offset (from base address).
	-	<b>Register Number</b> — <i>(IP Device inspectors only)</i> — Displays IP Device registers as an index number (normally ¼ the byte offset).
	-	<b>Register Number Offset</b> — <i>(IP Device inspectors only)</i> — .
-	<b>Help</b> Menu
	-	<b>SDK Support Login</b> — Opens your web browser to the AJA SDK Support site’s home/login page.
	-	<b>Generate Support Log</b> — Generates a “register log” (aka “support log”) file, which is essential for AJA SDK Support staff
		to diagnose issues and ascertain the state of the AJA device.
	-	<b>Capture SDRAM Contents</b> — Records the contents of device SDRAM into a “.raw” binary data file.
		This may be requested on rare occasion by AJA SDK Support staff in order to diagnose certain issues.
	-	<b>SDK Documentation</b> — Opens your web browser to the main page of the online SDK Documentation.
	-	<b>NTV2Watcher User Guide</b> — Opens your web browser to the online \ref usingntv2watcher User Guide.


@par	Common Settings

@image	html	watcher-commonsettings.png

There are several settings that are common to the device and apply to all inspectors:
-	<b>Poll</b> — Indicates and controls automatic device polling.
	-	Check/tick the box to repeatedly poll the device, and automatically update all active/visible inspectors.
		-	When polling is enabled, the <b>Polling Interval</b> slider appears, while the <b>Refresh</b> button will disappear.
	-	Un-check/un-tick the box to “freeze” all active/visible inspectors.
		-	When polling is disabled, a <b>Refresh</b> button appears, while the <b>Polling Interval</b> slider will disappear.
-	<b>Refresh</b> — Push this button to immediately update and refresh all active/visible inspectors.
	-	This control is visible only when polling is disabled.  It’s hidden when polling is enabled.
-	<b>Interval</b> — Adjusts the polling interval, from 25 milliseconds up to 2 seconds.
	-	This control is visible only when polling is enabled.  It’s hidden when polling is disabled.
	-	The \ref inspectorframebuffer and \ref inspectoranc are sync’d to an input/output/reference VBI, and ignore this setting
		when polling is enabled.
-	<b>Task Mode</b> — Indicates the device’s current task mode, and allows it to be changed.
-	<b>Multi-Format Mode</b> — Indicates the device’s “multi-format” mode, and allows it to be changed.
-	<b>Reference</b> — Indicates the device’s current clock reference setting, and allows it to be changed.


@par	Inspectors

@image	html	watcher-inspectorlist.png

There are a number of inspectors shown in the list at the left side of the window, only one of which can be selected at any given time.
This list may change if more capabilities are added to <b>NTV2 Watcher</b> in subsequent SDK releases.

Each inspector has its own particular user interface that’s designed to monitor and/or control a specific aspect of the AJA device.

Clicking on an inspector item in the list replaces the one that’s currently displayed in the main window to the newly-selected one.
If the newly-selected inspector was previously in use for the current device, its state will be exactly as it was left.
(Only when the device is changed does a new inspector get started in its default state.)

Right-clicking an inspector item in the list pops up a context menu
-	“<b>Move to Separate Window</b>” — Opens or moves the inspector to a separate window.
	This permits multiple inspectors to be viewed simultaneously.

Double-clicking on an inspector item in the list does the same thing as choosing the “<b>Move to Separate Window</b>” context menu item.

@note	Having multiple inspectors open in separate windows increases NTV2 Watcher CPU utilization,
		and can significantly impact the DMA transfer budget of the device and the PCIe bus.

@bug	NTV2Watcher keeps some persistent settings data in a local config file.
		If this file gets corrupted, it can cause NTV2Watcher to hang or crash upon startup.
		To work around this issue:
		-	<b>Linux</b> — Delete the ‘NTV2Watcher.conf’ file from your local app data folder ‘~/.config/aja’.
		-	<b>Mac OS</b> — Delete the ‘NTV2Watcher’ folder from your local app data (in ‘/Users/<i>username</i>/Library/Application Support/AJA’).
		-	<b>Windows</b> — Delete the ‘NTV2Watcher’ folder from your local app data (in ‘/Users/<i>username</i>/AppData/Local/aja’).



<hr size="50px">
@subsection	inspectorframebuffer	Frame Buffer Inspector

@image	html	watcher-inspector-framebuffer.png

The <b>Frame Buffer</b> inspector displays the contents of frame buffer memory on the AJA device in the context of a FrameStore.

@note	Because this inspector reads (via DMA) the entire contents of a frame buffer at the selected channel’s frame rate,
		it can interfere with any currently running video application, particularly if the additional DMAs exceed the available
		device or host data transfer budget. Thus, this inspector is not immune from “Heisenbugs” in which the act of monitoring
		an AJA device affects it and the application(s) under test.

In the context of the selected Channel/FrameStore, this inspector…
	-	…reads (via DMA) the frame buffer into host memory.
		-	In <b>Raw</b> mode, or for planar pixel formats, it reads the entire 8MB/16MB/32MB/etc. buffer.
		-	All other views — <b>Line</b>, <b>Component</b>, <b>Waveform</b>, <b>Image</b>  — it reads the frame buffer up to
			and including the last visible raster line.
	-	…attempts to refresh at the FrameStore’s current frame rate (as soon after the VBI as possible) when polling is enabled
		(i.e. when the <b>Poll</b> checkbox is checked/ticked).
		-	An indicator in the bottom-right corner of the main window’s status bar shows the actual, measured refresh rate.
		-	When the indicator’s color is not Green, then the inspector is not frame-accurate, and the data being displayed is stale.
	-	When polling is disabled, it will only update when the <b>Refresh</b> button is pressed.
	-	After each refresh, it compares the frame buffer contents to what was read the last time:
		-	The bottom left of the main window‘s status bar shows the number of raster lines that changed from the last frame
			(except <b>Raw</b> view).
		-	Changed data is highlighted with a brighter color (except <b>Image</b> view).
		-	<b>Frame Differencing mode</b> statically highlights the differences between the current frame and another frame.

Frame buffer memory content can be displayed in four different <b>View Mode</b>s:
	-	<b>Line</b> — The full raster (including VANC lines, if any), line-by-line, in decimal or hex format, grouped by 1, 2, 4 or 8-byte chunks.
	-	<b>Raw</b> — The entire 8MB or 16MB buffer in fixed-length “lines”, grouped by 1, 2, 4 or 8-byte chunks. The line length is adjustable.
		By default, unless disabled, boundaries between raster lines are indicated with a blue marker.
		Regions and planes are indicated by color:  green for audio, yellow for Ancillary data, etc.
	-	<b>Component</b> — The full raster (including VANC lines, if any), line-by-line, in component format,
		determined by the FrameStore’s frame buffer format, in hex or decimal.
		@image	html	watcher-inspector-fb-comp.png
	-	<b>Waveform</b> — The full raster (including VANC lines, if any), one-line-at-a-time, as a waveform,
		with the component waveforms overlaid on top of each other.
		@image	html	watcher-inspector-fb-wfm.png
	-	<b>Image</b> — The visible raster, as an image.


@par	Frame/Buffer Controls
	-	<b>FrameStore/Channel</b> — Selects the FrameStore/Channel of interest.
	-	<b>On/Off</b> — Indicates if the FrameStore/Channel is enabled or not.  It can be changed using this menu
		(if not in <b>Auto</b> mode and the device <b>Task Mode</b> is not <b>Standard Tasks</b>).
		-	See also:  CNTV2Card::EnableChannel , CNTV2Card::DisableChannel , CNTV2Card::IsChannelEnabled , \ref vidop-fs
	-	<b>Frame Size</b> Indicator — This shows the discrete size of the frame … i.e. the location of the frame boundaries
		in device memory. This will be the “intrinsic” minimum size of 8MB or 16MB, whatever is the largest size required by all device FrameStores
		(determined by the hardware firmware), and multiplied by 4 or 8 for UHD/4K or UHD2/8K rasters, respectively.
	-	<b>Auto</b> — If checked, the frame number being monitored will automatically follow the input or output
		(depending on frame-store mode) “current frame” register, and the frame number spin control will be disabled.
		If this is unchecked, the frame number spin control will be available, and the frame being watched can be manually controlled.
		When unchecked, many other aspects of the device can be controlled (e.g., <b>Mode</b>, <b>Geometry</b>, <b>Format</b>, <b>Size</b>, etc.),
		including the ability to manually edit/change the buffer content.
	-	<b>Frame Number</b> spin control:  When available, controls which frame to view.
		When unavailable, indicates the frame being viewed. Frame 0 is the first frame in device memory.
		-	Note that this <b>Frame Number</b> in combination with the indicated <b>Frame Size</b> (above) determines the region in device memory
			being displayed. The offset and length calculation of this region is done in the context of the currently selected <b>FrameStore/Channel</b>.
		-	For example, if FrameStores 1 and 3 on a \ref kona5 are configured for UHD/2vuy, and FrameStore 2 is configured for 720p/2vuy…
			-	Each frame of FrameStores 1 and 3 is 32MB in length.
			-	Each frame of FrameStore 2 is 8MB in length.
			-	Therefore, frames 0, 1, 2 and 3 of FrameStore 2 would all lie inside frame 0 of FrameStores 1 and 3.
			-	Similarly, frames 4, 5, 6 and 7 of FrameStore 2 would all lie inside frame 1 of FrameStores 1 and 3.
			-	And so on…
		@note	Even though the current frame’s contents may have been written in the context of <i>another</i> <b>FrameStore/Channel</b> (e.g. '2vuy'),
				this inspector displays the frame’s data in the context of its <i>current</i> <b>FrameStore/Channel</b> (e.g. 'v210'), and thus may
				appear completely wrong, especially as an Image <b>View Mode</b>.

@par	Device/Channel Configuration
	-	<b>Mode</b> — Indicates/controls the FrameStore’s current mode (Input or Output).
		It can be changed using this menu (if not in <b>Auto</b> mode and the device <b>Task Mode</b> is not <b>Standard Tasks</b>).
		-	Input — the FrameStore’s ::NTV2Mode is set to ::NTV2_MODE_INPUT or ::NTV2_MODE_CAPTURE
		-	Output — the FrameStore’s ::NTV2Mode is set to ::NTV2_MODE_OUTPUT or ::NTV2_MODE_DISPLAY
		-	See also:  CNTV2Card::GetMode , CNTV2Card::SetMode , \ref vidop-fs
	-	<b>Video Format</b> — Indicates/controls the FrameStore’s current video format.
		It can be changed using this menu (if not in <b>Auto</b> mode and the device <b>Task Mode</b> is not <b>Standard Tasks</b>).
		-	See also:  CNTV2Card::GetVideoFormat , CNTV2Card::SetVideoFormat , ::NTV2VideoFormat , \ref vidop-fs
	-	<b>VANC</b> — Indicates/controls the FrameStore’s current VANC mode.
		It can be changed using this menu (if not in <b>Auto</b> mode and the device <b>Task Mode</b> is not <b>Standard Tasks</b>).
		-	<b>Off</b> — the FrameStore’s ::NTV2VANCMode is set to ::NTV2_VANCMODE_OFF
		-	<b>Tall</b> — the FrameStore’s ::NTV2VANCMode is set to ::NTV2_VANCMODE_TALL (if available for the video format)
		-	<b>Taller</b> — the FrameStore’s ::NTV2VANCMode is set to ::NTV2_VANCMODE_TALLER (if available for the video format)
		-	See also:  CNTV2Card::GetVANCMode , CNTV2Card::SetVANCMode , \ref vancframegeometries
	-	<b>FB Format</b> — Indicates/controls the FrameStore’s current pixel format.
		It can be changed using this menu (if not in <b>Auto</b> mode and the device <b>Task Mode</b> is not <b>Standard Tasks</b>).
		-	See also:  CNTV2Card::GetFrameBufferFormat , CNTV2Card::SetFrameBufferFormat , ::NTV2FrameBufferFormat , \ref vidop-fs , \ref devicefbformats
	-	<b>VFlip</b> — Indicates/controls the FrameStore’s vertical frame buffer orientation. Can be changed at any time.
		-	When checked — the FrameStore’s ::NTV2VideoFrameBufferOrientation is set to ::NTV2_FRAMEBUFFER_ORIENTATION_BOTTOMUP
		-	When unchecked — the FrameStore’s ::NTV2VideoFrameBufferOrientation is set to ::NTV2_FRAMEBUFFER_ORIENTATION_TOPDOWN (aka ::NTV2_FRAMEBUFFER_ORIENTATION_NORMAL ) 
		-	See also:  CNTV2Card::GetFrameBufferOrientation , CNTV2Card::SetFrameBufferOrientation , \ref vidop-fs
	-	<b>VancShift</b> — Indicates/controls the FrameStore’s VANC Data Shift Mode.
		It can be changed when not in <b>Auto</b> mode and the device <b>Task Mode</b> is not <b>Standard Tasks</b>.
		-	When checked, the FrameStore’s ::NTV2VANCDataShiftMode is set to ::NTV2_VANCDATA_8BITSHIFT_ENABLE.
		-	When unchecked, the FrameStore’s ::NTV2VANCDataShiftMode is set to ::NTV2_VANCDATA_NORMAL.
		-	See also:  CNTV2Card::GetVANCShiftMode , CNTV2Card::SetVANCShiftMode , \ref vidop-fs , \ref vancframegeometries

@par	Navigation and Data Selection
	-	<b>Scrolling</b> — The display can be scrolled horizontally and/or vertically.
		-	Use the vertical scroll bar to manually scroll the display up or down.
		-	Use the horizontal scroll bar to manually scroll the display left or right.
		-	If a scroll-wheel is available, move the cursor into the display, and roll the scroll wheel to scroll the display up or down.
		-	When there’s no current selection, use the up/down/left/right-arrow keys to scroll the display up/down/left/right, respectively.
		-	Use the Page-Up or Page-Down keys to scroll the display up or down by a larger amount.
		-	Press <b>Home</b> to scroll the upper-left corner of the current selection into view (or frame, if nothing selected).
		-	Press <b>End</b> to scroll the bottom-right corner of the current selection into view (or frame, if nothing selected).
	-	<b>Vertical Ruler</b> — This ruler labels lines (rows) in the display.
		-	Left-click (and optionally drag up or down) to select entire lines.
		-	Right-click to pop up a menu to choose the <b>Units</b> to use:
			-	<b>Line Numbers</b> — 1-based decimal line numbers relative to the start of the frame buffer.
			-	<b>Lines With Fields</b> — 1-based decimal line numbers relative to the start of the field … plus the field number (<b>F1</b> or <b>F2</b>).
			-	<b>SMPTE Lines</b> — Decimal SMPTE line numbers (including field numbers, if interlaced).
			-	<b>Bytes From Top</b> — The hexadecimal offset, in bytes, from the start of the frame buffer.
			-	<b>Bytes From Bottom</b> — The negative hexadecimal offset, in bytes, from the bottom of the frame buffer.
			-	<b>Device Memory Address</b> — The hexadecimal byte offset into the device SDRAM.
			-	Note that the <b>Image</b> view always uses 1-based decimal line numbers relative to the start of the visible portion of the frame buffer (i.e., excludes any VANC lines).
	-	<b>Horizontal Ruler</b> — This ruler labels columns in the display.
		-	Left-click (and optionally drag left or right) to select entire pixel columns.
		-	Right-click to pop up a menu to choose the <b>Units</b> to use:
			-	<b>Elements From Left Edge</b> — 0-based decimal element numbers relative to the start of each line, where an element is the natural “chunk” of pixels for a given frame buffer format.
			-	<b>Bytes From Left Edge</b> — The decimal offset, in bytes, from the start of each line.
			-	<b>Bytes From Left Edge (Hex)</b> — The hexadecimal offset, in bytes, from the start of each line.
			-	<b>Pixels From Left Edge</b> — 0-based decimal pixel numbers, as measured from the start of each line.
			-	Note that the <b>Image</b> view always uses 0-based decimal pixel offsets relative to the left edge of the frame buffer.
	-	<b>Selecting</b> — A rectangular <b>region-of-interest</b> of the raster (or raw memory) can be selected/highlighted,
		and is shown as a yellow box in the view.
		-	The current selection, if any, is described in the status bar, to the left of the refresh timing indicator.
		-	To cancel the current selection, press <b>Esc</b>ape.
		-	Switching views will attempt to retain the current selection. If this is not possible
			(e.g., switching from <b>Raw</b> to <b>Image</b> when a byte range outside the raster was selected),
			the selection will be reset/cancelled.
		-	Left-click in the display (and optionally drag up/down/left/right) to select a rectangular raster or memory portion.
			@image	html	watcher-fb09kMouseDragMode_DrawSelection.png
			-	Vertically, <b>Component</b>, <b>Image</b>, and <b>Line</b> views will select line-by-line,
				whereas <b>Raw</b> views will select by a number of powers-of-two byte offsets.
			-	Horizontally, <b>Image</b> and <b>Component</b> views will select pixel-by-pixel,
				whereas <b>Line</b> and <b>Raw</b> views will select by 1/2/4/8-byte groups
				(depending on the current <b>Grouping</b> setting).
		-	Use the arrow keys to precisely and incrementally change the existing selection:
			-	By default, the selection will change to a single-element selection above/left of the top/left corner,
				or below/right of the bottom/right corner.
			-	Hold the <b>Shift</b> key down to expand the selection from the top/left or bottom/right corner.
			-	Hold the <b>Ctrl</b> (<b>Command</b> on MacOS) key down to shrink the selection
				from the top/left or bottom/right corner.
		-	Choose <b>Select All</b> from the <b>Edit</b> menu to select the entire raster
			(<b>Image</b>, <b>Component</b> or <b>Line</b> view) or frame buffer (<b>Raw</b> view).
		-	Moving the mouse cursor into the selection will cause a ToolTip to appear that describes the selection.
		-	Dragging the edge of the yellow selection box will resize the selection without moving it.
			@image	html	watcher-fb01kMouseDragMode_AdjustTopLeft.png
			@image	html	watcher-fb02kMouseDragMode_AdjustTop.png
			@image	html	watcher-fb03kMouseDragMode_AdjustTopRight.png
			@image	html	watcher-fb04kMouseDragMode_AdjustRight.png
			@image	html	watcher-fb05kMouseDragMode_AdjustBotRight.png
			@image	html	watcher-fb06kMouseDragMode_AdjustBottom.png
			@image	html	watcher-fb07kMouseDragMode_AdjustBotLeft.png
			@image	html	watcher-fb08kMouseDragMode_AdjustLeft.png
		-	Dragging from inside the selection box will change the selection’s position without changing its dimensions.
			@image	html	watcher-fb10kMouseDragMode_MoveSelection.png
		-	Dragging from inside the selection box with both the <b>Ctrl</b> and <b>Shift</b> keys held down will
			copy the underlying raster data in the frame buffer to the position where the selection frame was moved
			(<b>Line</b> or <b>Raw</b> views only).
			@image	html	watcher-fb11kMouseDragMode_MoveContents.png
		-	Press <b>Enter</b> or <b>Return</b> to enter an interactive editing mode:
			-	Works in <b>Lines</b> or <b>Raw</b> view modes only.
			-	Starts in the selection’s top-left “cell”.
			-	Standard text editing behaviors apply.
			-	Press <b>Esc</b>ape to cancel and make no changes.
			-	Press <b>Enter</b> or <b>Return</b> to commit the change.
				This will replace every “cell” of the selection with the new value.
	-	<b>Right-Click Operations</b>
		-	<b>View Mode</b> — Changes the view to <b>Lines</b>, <b>Raw</b>, <b>Components</b> or <b>Image</b>.
		-	<b>Grouping</b> — (<b>Lines</b> and <b>Raw</b> views only) — Changes the data grouping to 8-bit (1-byte), 16-bit (2-byte), 32-bit (4-byte) or 64-bit (8-byte).
		-	<b>Component Radix</b> — (<b>Components</b> view only) — Changes the radix of the component data to Hexadecimal or Decimal.
		-	<b>Show Components</b> — (<b>Components</b> view only) — Enables/disables the display of the Luma/Cb/Cr/A or R/G/B/A components.
		-	<b>Show Fields</b> — (<b>Lines</b> and <b>Components</b> views only) — Enables/disables the display of lines F1, F2 or both.
		-	<b>Bytes/Line</b> — (<b>Raw</b> view only) — Changes the number of bytes to display in each line of the Raw data view.
			Choose from 64 bytes up to 32K bytes by powers of 2.
			Note that larger values make for fewer lines and many more columns.
			Smaller values show many more lines with fewer columns.
		-	<b>Show/Hide Line Boundaries</b> — (<b>Raw</b> view only) — Shows or hides the line boundary markers.
		-	<b>Show Little/Big Endian</b> — (<b>Lines</b> and <b>Raw</b> views only) — Toggles endianness of 16/32/64-bit word data display.
		-	<b>Copy … (Image)</b> — Copies the frame image (or the selected portion) to the host Clipboard.
		-	<b>Copy … Data (Text)</b> — Copies the frame data (or the currently-selected portion) to the host Clipboard.
			The data is encoded such that it’s readily usable in C/C++ code, as well as importing into spreadsheet and database programs (.csv).
		-	<b>Copy … Description</b> — Copies a description of the frame data (or the currently-selected portion) to the host Clipboard.
		-	<b>Paste</b> — (<b>Auto</b> mode OFF, and only if an entire frame was previously Copied) — Replaces the current 8/16/32MB frame with the 8/16/32MB frame that was Copied earlier.
		-	<b>Clear</b> — (<b>Auto</b> mode OFF only) — Zeroes the frame (or the currently-selected portion of it).
		-	<b>Select All</b> — Selects everything possible in the current view mode:
			-	<b>Image</b> view — Selects the visible lines of the frame.
			-	<b>Lines</b> and <b>Components</b> views — Selects the visible lines plus VANC lines (if VANC enabled).
			-	<b>Waveform</b> view — Selects the entire line that’s currently displayed.
			-	<b>Raw</b> view — Selects the entire 8/16/32MB buffer.
		-	<b>Set Input/Output Frame Here</b> — (<b>Auto</b> mode OFF, and current frame being viewed doesn’t match the FrameStore’s
			current Input or Output Frame) — Changes the FrameStore’s Input or Output Frame to the current frame being viewed.
		-	<b>Fill Frames…</b> — (<b>Auto</b> mode OFF, and nothing selected) — Reveals the \ref fillbufferdlog for filling
			device frame memory with specific values, colors, test patterns, etc.
		-	<b>Edit Value…</b> — (<b>Auto</b> mode OFF, <b>Lines</b> or <b>Raw</b> views, something selected) — Enters the interactive editing mode.
			See “Press <b>Enter</b> or <b>Return</b>” discussion above.
		-	<b>Swap Byte Order</b> — (<b>Auto</b> mode OFF, <b>Lines</b> or <b>Raw</b> views, 16/32/64-bit groups) — Swaps the byte order
			of the frame data (or the currently-selected portion).
		-	<b>Compare to Frame…</b> — (<b>Auto</b> mode OFF only) — Enables <b>Frame Differencing mode</b>,
			comparing the current frame with another, highlighting the differences.  To cancel this mode,
			toggle the “Auto” setting, or change the current frame being viewed.

@par	Data Operations
	-	<b>File</b> menu
		-	<b>Save As…</b> — Saves the frame buffer contents to a file.
			-	The <b>Auto</b> checkbox must be un-checked.
			-	Choose the <b>FrameStore</b> and <b>Frame</b> of interest.
			-	Click in the <b>File</b> menu, then choose <b>Save As…</b>.
			-	A standard file-save dialog box appears. Navigate to the folder on your local host where you want the file to be saved, and give it a name.
			-	<b>IMPORTANT:</b> The format of the data written to the file is View-dependent:
				-	<b>Image</b> — Writes a PNG image file of the raster selection, or, if there’s no selection, the full raster.
				-	<b>Lines</b> and <b>Components</b> — Writes a human-readable C-compilable dump of the raster selection, or,
					if there’s no selection, the full raster.
				-	<b>Raw</b> — Writes a raw, binary data file containing the contents of the entire frame buffer. This will be
					8MB or 16MB for normal rasters. For “quad” 4K/UHD, it will be 8MB/16MB × 4. For “quad-quad” 8K, it will be 8MB/16MB × 16.
	-	<b>Edit</b> menu
		-	<b>Copy</b> — Copies the current selection to the “clipboard” that can be used in a subsequent “Paste” operation.
			The data written to the clipboard is View-dependent:
			-	<b>Image</b> — The selected raster image, or, if there’s no selection, the full raster.
			-	All Others — Text that’s a human-readable, C-compilable dump of the selected data,
				or if there’s no selection, the entire buffer.
		-	<b>Select All</b> — Selects everything possible in the current view mode:
			-	<b>Image</b> view — Selects the visible lines of the frame.
			-	<b>Lines</b> and <b>Components</b> views — Selects the visible lines plus VANC lines (if VANC enabled).
			-	<b>Waveform</b> view — Selects the entire line that’s currently displayed.
			-	<b>Raw</b> view — Selects the entire 8/16/32MB buffer.
	-	<b>Buffer Editing</b> — (<b>Lines</b> or <b>Raw</b> view only)
		-	This will fill a portion of the currently displayed frame buffer with a specific value that you enter from the keyboard.
		-#	Highlight a selection area of any size.
		-#	Press <b>Enter</b> (or <b>Return</b>).
		-#	Type the new value in the edit box that appears.
		-#	Press <b>Enter</b> (or <b>Return</b>) to fill the selection with the new value.
			Press <b>Esc</b> (or click outside the selection) to cancel.
	-	<b>Drag and Drop</b>
		-	The <b>Auto</b> checkbox must be un-checked.
		-	Choose the <b>FrameStore</b> and <b>Frame</b> of interest.
		-	Drag operations started from inside the Frame Buffer inspector view cannot end outside the view (not yet supported).
		-	Ctrl+Shift+Drag operations started from inside an existing selection in the Frame Buffer inspector
			(<b>Line</b> or <b>Raw</b> views only) will copy the underlying raster data to where it’s dropped in the frame buffer.
		-	Dropping files and/or folders from outside the NTV2Watcher window are supported.
			(Prior to SDK 15.3, only one file having a particular name extension could be dropped at one time.)
			-	The first frame buffer to be changed is determined by the <b>frame number</b> spinbox control.
				Subsequent files are loaded into successive frame buffers.
			-	The order of the files (and therefore which frame(s) get which file’s data) is host operating-system dependent.
			-	Dropped folders have their immediate contents enumerated.
			-	Symbolic links are skipped and not followed.
			-	Files are first attempted to be loaded as <b>Image Files</b> <i>regardless of name extension</i>.
				-	Most popular image formats are supported (e.g. <b>PNG</b>, <b>JPG</b>, <b>BMP</b>, etc.).
				-	If the image is decoded and loaded successfully, the frame’s visible raster content is replaced with the image.
				-	If the image dimensions differ from the frame geometry, the image is scaled to fit without altering its aspect ratio.
				-	Hold down the <b>Shift</b> key when dropping the file(s) to have the image’s aspect ratio changed to fill the raster.
					This will squish or stretch the image vertically or horizontally (or both).
			-	All other readable files are treated as <b>Raw Binary Data Files</b>:
				-	The frame’s buffer content is replaced byte-for-byte with the raw data from the file.
				-	If the raw file is smaller than the frame buffer, only the bytes from the file will overwrite the frame buffer.
					All subsequent content in the buffer will remain unchanged.
				-	If the raw file is larger than the frame buffer, subsequent frames will continue to be written until the
					remaining bytes from the file are read (or until the highest-numbered frame in device SDRAM has been DMA’d).


@note Data coloring in the <b>Frame Buffer Inspector</b> can be configured in the <b>Colors</b> tab of the \ref watcherprefs dialog.



<hr size="50px">
@subsection	inspectoraudio		Audio Inspector

@image	html	watcher-inspector-audio.png

The <b>Audio</b> inspector displays the input or output audio buffer memory of the AJA device in the context of an Audio System,
including its read or write “head” position.

@note	Because this inspector reads (via DMA) the entire contents of an audio buffer at NTV2Watcher’s currently selected polling rate,
		it can interfere with any currently running application, particularly if the additional DMAs exceed the available
		device or host data transfer budget. Thus, this inspector is not immune from “Heisenbugs” in which the act of monitoring an AJA
		device affects it and the application(s) under test.

Audio buffer memory content can be displayed in any one of three ways:
	-	<b>Raw</b> — The entire buffer in per-channel “lines”, each sample value shown as a 4-byte (32-bit) longword.
	-	<b>Waveform</b> — A vertical stack of waveform plots for each audio channel that’s carrying PCM data.
	-	<b>Phase</b> — A phase plot of one audio channel against another. Both audio channels must be carrying PCM data.

When device polling is enabled (i.e. when the <b>Poll</b> checkbox is checked/ticked),
this inspector monitors the audio system’s input or output buffer.
At the given polling <b>Interval</b> rate, it reads the entire buffer into host memory, and compares it to its previous contents.
The status bar shows the read or write head position, as well as what changed.
The display highlights changed content in a brighter color.

@par	Audio System Controls and Indicators
	-	<b>Audio System Selection and Configuration</b>
		-	<b>Audio System</b> — Selects the audio system of interest.
		-	<b>Rate</b> — Indicates the audio system’s current sample rate.
			It can be changed using this menu (if the device <b>Task Mode</b> is not <b>Standard Tasks</b>).
		-	<b>Size</b> — Indicates the audio system’s current buffer size.
			It can be changed using this menu (if the device <b>Task Mode</b> is not <b>Standard Tasks</b>).
		-	<b>Channels</b> — Indicates the audio system’s current channel count.
			It can be changed using this menu (if the device <b>Task Mode</b> is not <b>Standard Tasks</b>).
	-	<b>State Indicators</b>
		-	<b>A/C Indicator</b> — Indicates if the audio system is being used by <b>AutoCirculate</b>, and if so, which <b>AutoCirculate Channel</b>.
		-	<b>Active Pairs</b> — Indicates which audio channel pairs are currently active.
		-	<b>Non-PCM Pairs</b> — Indicates which of the active audio channel pairs are carrying non-PCM data.
	-	<b>Operation Controls</b>
		-	<b>Start</b> — Click this button to start/run the audio system. If already running, the button is dimmed and indicates “Running”.
		-	<b>Stop</b> — Click this button to stop the audio system. If already stopped, the button is dimmed and indicates “Stopped”.
		-	<b>Loopback</b> — If checked, audio samples from the audio system’s source are routed directly into the output embedder(s) that are sourced from this audio system.
		-	<b>Write-Enable</b> — (Shown only in <b>Input</b> mode.) If checked, and if the capture audio system is running, captured audio will be written into
			the audio system’s capture buffer at the <b>Write Head</b>. Otherwise, the audio system will not be permitted to write into the capture buffer.
		-	<b>Erase</b> — (Shown only in <b>Output</b> mode.) If checked, the audio system will automatically write silence (i.e., zero values) into the output buffer
			immediately behind the <b>Read Head</b>.
		-	<b>Embed</b> — (Shown only in <b>Output</b> mode.) If checked, the audio system’s output audio embedder is enabled.
			If unchecked, the audio system’s output embedder is disabled, and will emit no audio packets.
		-	<b>PCM Output</b> — (Shown only in <b>Output</b> mode, and only for devices that lack per-audio-channel-pair PCM control.)
			If checked, the output embedder marks all outgoing audio packets as normal PCM.
			If unchecked, the output embedder marks all outgoing audio packets as non-PCM.
		-	<b>Non-PCM Output</b> — (Shown only in <b>Output</b> mode, and only for devices that have per-audio-channel-pair PCM control.)
			This popup menu lists all possible channel pairs.
			If a channel pair is checked, the output embedder marks outgoing audio packets for that channel pair as non-PCM.
			If a channel pair is unchecked, the output embedder marks outgoing audio packets for that channel pair as normal PCM.
	-	<b>Mode and View Controls</b>
		-	<b>View</b> — Controls which part of the audio system to inspect:
			-	<b>Input</b> — Inspects the input (capture) audio buffer. Look for changes up to the write head, where the de-embedder is writing new samples.
			-	<b>Output</b> — Inspects the output (playout) audio buffer. Look for changes ahead of the read head, where a playout application may be writing new samples.
		-	<b>Auto</b> — If checked, automatically and dynamically scrolls the display to reveal the audio data that immediately precedes the <b>Read Head</b> or follows the <b>Write Head</b>.
		-	<b>Mon</b> — If checked, sends new audio data to the host audio system. (<b>Note:</b> Because of the nature of digital audio, and the human ear’s sensitivity to
			interruptions or distortions in audio waveforms, monitoring audio should only be done with very short polling intervals.)
		-	<b>AutoDetect</b> — If checked, scans for muted channels or channels that contain Dolby-encoded audio data, and augments the <b>Vertical Ruler</b> scale accordingly.
		-	<b>Source</b> — (Shown only in <b>Input</b> mode.) This popup menu lists all possible audio sources for the audio system, and indicates the current source.
			The current source can be changed immediately using this menu.
	-	<b>Other</b>
		-	<b>Status Bar</b> — Indicates the audio system’s current <b>Write Head</b> (<b>Input</b> mode) or <b>Read Head</b> (<b>Output</b> mode) position,
			and which part of its sample buffer changed (if any).

@par	Navigation
	-	<b>Scrolling</b> — The display can be scrolled horizontally and/or vertically.
		-	Use the vertical scroll bar to manually scroll the display up or down.
		-	Use the horizontal scroll bar to manually scroll the display left or right.
		-	If a scroll-wheel is available, move the cursor into the display, and roll the scroll wheel to scroll the display up or down.
		-	Use the up-arrow or down-arrow keys to scroll the display up or down.
		-	Use the left-arrow or right-arrow keys to scroll the display left or right.
		-	Use the page-up or page-down keys to scroll the display up or down by a larger amount.
	-	<b>Vertical Ruler</b> — This ruler identifies each audio channel in the display.
		Each channel can be augmented with “Absent”, “PCM” or “Non-PCM” (or “Mute” or “Non-PCM Dolby” with <b>AutoDetect</b> enabled).
		-	Right-click to change the <b>Vertical Scale</b>. Choose from “Shortest” to “Tallest”.
	-	<b>Horizontal Ruler</b> — This ruler identifies the offset into the audio buffer of each column (or pixel, horizontally) in the audio buffer.
		-	Right-click in the horizontal ruler to pop up the <b>Units</b> menu:
			-	<b>Byte Offset</b> — Shows the buffer offset as a byte count, in hexadecimal.
			-	<b>Samples</b> — Shows the buffer offset as a zero-based decimal sample index number.
			-	<b>Seconds</b> — Shows the buffer offset as a fixed-point decimal time value (in microseconds, milliseconds, or seconds, as appropriate).
			-	<b>Abs Address</b> — Shows the buffer offset as an absolute physical device SDRAM address (in hex).
			-	This setting affects the units used in the <b>Change Indicator</b> in the status bar.
	-	Right-click in the display to pop up a context-sensitive menu:
		-	<b>View</b> menu:
			-	<b>Raw</b> — Switch to the <b>Raw</b> view.
			-	<b>Waveform</b> — Switch to the <b>Waveform</b> view.
			-	<b>Phase</b> — Switch to the <b>Phase</b> view.
		-	<b>Units</b> menu (<b>Raw</b> View only):
			-	<b>Hex</b> — Shows raw sample data as 4-byte hexadecimal values.
			-	<b>Decimal</b> — Shows raw sample data as decimal values.
			-	<b>Percent</b> — Shows raw sample data as a decimal percentage of maximum.
			-	<b>Float</b> — Shows samples as floating point values.
			-	<b>dB</b> — Shows samples in decibels.
		-	<b>Scale</b> menu (<b>Waveform</b> View only):
			-	<b>Fit in Window</b> — Shows all samples in audio buffer in the window.
			-	<b>1:1</b> — Shows 1 sample per pixel.
			-	<b>1:2</b> — Shows 2 samples per pixel.
			-	<b>1:4</b> — Shows 4 samples per pixel.
			-	<b>1:8</b> — Shows 8 samples per pixel.
			-	<b>1:16</b> — Shows 16 samples per pixel.
		-	<b>Copy Waveform</b> — (<b>Waveform</b> View only) — Copies the selected waveform to the host’s clipboard.
		-	<b>Copy Text</b> — (<b>Raw</b> View only) — Copies the selected samples to the host’s clipboard.
		-	<b>Copy All Raw Data</b> — Copies the entire buffer to the host’s clipboard.
		-	<b>Paste Raw Data</b> — Pastes the entire buffer into the audio buffer.
			Available only if previously copied from an Audio inspector view.
		-	<b>Clear</b> — Sets the selected samples in the audio buffer to zero (silence).
		-	<b>Import Audio…</b> — Opens a file-picker dialog to choose an audio file to import and fill the audio buffer.
		-	<b>Export WAV…</b> — Opens a file-save dialog, and if confirmed, exports the selected audio samples to a WAV audio file.
		-	<b>Export RAW…</b> — Opens a file-save dialog, and if confirmed, copies the selected audio samples from the audio buffer into a RAW audio file.
		-	<b>View in Frame Buffer</b> — Shows the selected audio samples in the <b>Raw View</b> of the \ref inspectorframebuffer .
	-	<b>Selecting</b> — A rectangular <b>region-of-interest</b> of the audio buffer can be selected/highlighted,
		and shown as a yellow box in the view.
		-	The current selection, if any, is described in the status bar, to the left of the refresh timing indicator.
		-	To cancel the current selection, press <b>Esc</b>ape.
		-	Switching views will attempt to retain the current selection. If this is not possible, then the selection will be reset/cancelled.
		-	Left-click in the display (and optionally drag up/down/left/right) to select a portion of the audio buffer.
			-	Vertically, one or more <b>Channel</b>s will be selected.
			-	Horizontally, one or more <b>Sample</b>s (sometimes called “frames”) will be selected.
		-	Use the arrow keys to precisely and incrementally change the existing selection:
			-	By default, the selection will change to a single-sample selection above/left of the top/left corner,
				or below/right of the bottom/right corner.
			-	Hold the <b>Shift</b> key down to expand the selection from the top/left or bottom/right corner.
			-	Hold the <b>Ctrl</b> (<b>Command</b> on MacOS) key down to shrink the selection from the top/left or bottom/right corner.
		-	Choose <b>Select All</b> from the <b>Edit</b> menu to select all samples in the buffer.
		-	Moving the mouse cursor into the selection will cause a ToolTip to appear that describes the selection.
		-	Dragging from inside the selection box will start making a new selection.

Use the \ref tonegenerator to fill the audio output buffer, either statically (one-time data fill) or dynamically (continuously).


<hr size="50px">
@subsection	inspectoranc		Ancillary Data Inspector

@image	html	watcher-inspector-anc.png

The <b>Anc</b> inspector monitors the ancillary data areas of a frame buffer, and the state registers of the device’s SDI Anc inserter/extractor widgets (if any).

@note	Because this inspector reads (via DMA) the entire contents of a frame buffer at NTV2Watcher’s currently selected polling rate,
		it can interfere with any currently running application, particularly if the additional DMAs exceed the available
		device or host data transfer budget. Thus, this inspector is not immune from “Heisenbugs” (the Heisenburg Uncertainty Principle)
		in which the act of monitoring an AJA device affects it and the application(s) under test.

This inspector monitors the indicated frame buffer for the selected Channel/FrameStore (i.e. its corresponding SDI connector’s Anc Extractor/Inserter).
	-	It reads (via DMA) all or part of the frame buffer into host memory, depending on the minimum data transfer it can get away with.
		-	If VANC is enabled for the Channel/FrameStore, it will read all VANC lines that precede the first visible line in the raster.
		-	If the Channel/FrameStore is configured for SD, then it will read all visible lines in the raster (to ensure it gets line 21 for “analog” captions).
		-	If the device supports Anc inserters/extractors, then it will read the entire 8MB/16MB/32MB/etc. buffer.
	-	When polling is enabled (i.e. when the <b>Poll</b> checkbox is checked/ticked), this inspector attempts to refresh
		at the Channel/FrameStore’s current frame rate (as soon after the VBI as possible).
		-	An indicator in the bottom-right corner of the main window’s status bar shows the actual, measured refresh rate.
		-	When the indicator’s color is not Green, then the inspector is not frame-accurate, and the data being presented is late (stale).
	-	When polling is disabled, it will only update when the <b>Refresh</b> button is pressed.
	-	After each refresh, it compares the frame buffer contents to what was read the last time:
		-	The data display highlights changed content with a brighter color.

The Anc inspector has four main sections:
	-	<b>Channel/FrameStore and Frame Controls</b> — Selects a FrameStore (Channel) and frame to inspect.
		-	<b>FrameStore/Channel</b> — Selects the FrameStore/Channel of interest. On devices that have Anc Inserters/Extractors:
			-	In <b>Capture Mode</b>, this indicates the SDI Input associated with the firmware Anc Extractor being inspected/controlled.
			-	In <b>Playout Mode</b>, this indicates the SDI Output associated with the firmware Anc Inserter being inspected/controlled.
		-	<b>Frame:</b>  When available, controls which frame to view. When unavailable, indicates the frame being viewed.
		-	<b>Auto</b> — If checked, the frame number being monitored will automatically follow the input or output
			(depending on FrameStore ::NTV2Mode) “current frame” register, and the frame number spin control will be disabled.
			If not checked, the frame number is manually controlled.
		-	<b>Show Absent Packets</b> — If checked, every \ref inspectoranc-pkt will show missing packets (those that appeared at least once
			and then not seen).
		-	<b>Video Format Indicator</b> — Indicates the Channel/FrameStore’s current video standard, frame rate and geometry.
	-	<b>Frame Buffer Line 21 Region</b>
		@image	html	watcher-inspector-anc-line21.png
		-	This section is visible only when the Channel/FrameStore is configured for 525i SD.
		-	<b>Line 21 (F1):</b>  Shows the byte pairs decoded from line 21 (if any).
		-	<b>Line 284 (F2):</b> Shows the byte pairs decoded from line 284 (if any).
	-	<b>Frame Buffer VANC Region</b>
		@image	html	watcher-inspector-anc-vanc.png
		-	This section displays the VANC region of the frame buffer (if any).
		-	<b>VANC:</b> — This menu controls the Anc data display:
			-	<b>Hide</b> — Hides the buffer data display.
			-	<b>Raw</b> — Displays the VANC region (if any) data as raw data. (See \ref inspectoranc-raw.)
			-	<b>Packets</b> — Decodes the VANC region (if any) data, and lists the decoded ancillary data packets. (See \ref inspectoranc-pkt.)
		-	<b>Mode</b> — Indicates/controls the current <b>VANC Mode</b> of the FrameStore:
			-	<b>Off</b> — Turns off ::NTV2VANCMode (setting it to ::NTV2_VANCMODE_OFF).
			-	<b>Tall</b> — Enables VANC mode, setting it to ::NTV2_VANCMODE_TALL.
			-	<b>Taller</b> — Enables VANC mode, setting it to ::NTV2_VANCMODE_TALLER.
		-	<b>Vanc Shift</b> — Indicates/controls the FrameStore’s <b>VANC Data Shift Mode</b>.
			-	This setting only affects how data in the VANC region is written/read to/from the frame buffer for \ref fbformat8bitycbcr.
			-	<b>Capture Mode (Input):</b>  When enabled, the firmware automatically right-shifts incoming 10-bit data words in the VANC
				lines by 2 bits, making it easy to read ancillary data packets from the frame buffer.
			-	<b>Playback Mode (Output):</b>  When enabled, the firmware automatically left-shifts outgoing data words by 2 bits from the
				VANC lines, making it easy to write ancillary data packets into the frame buffer.
			-	When checked, the FrameStore’s ::NTV2VANCDataShiftMode is set to ::NTV2_VANCDATA_8BITSHIFT_ENABLE.
			-	When unchecked, the FrameStore’s ::NTV2VANCDataShiftMode is set to ::NTV2_VANCDATA_NORMAL.
			-	See also:  CNTV2Card::GetVANCShiftMode , CNTV2Card::SetVANCShiftMode , \ref vidop-fs , \ref vancframegeometries
	-	<b>SDI Anc Extractor/Inserter</b>
		@image	html	watcher-inspector-anc-sdi.png
		-	This area is visible only for devices that have Anc inserter/extractor firmware associated with its SDI connectors.
			It has three major sections laid out vertically:
			-	<b>Control Area & Register Display</b>
				-	<b>Registers:</b> — This menu controls the inserter/extractor register display:
					-	<b>Hide</b> — Hides the register display.
					-	<b>Show</b> — Displays the registers.
				-	<b>Run</b> button — Click to start the inserter/extractor. Displays <i>“Running”</i> when running.
				-	<b>Stop</b> button — Click to stop the inserter/extractor. Displays <i>“Stopped”</i> when stopped.
				-	<b>Clear</b> button — Click to clear/zero the Anc region of frame buffer memory.
					-	If <b>Auto</b> is enabled, this will clear/zero the Anc region of all relevant frame buffers on the device
						(i.e. those being accessed by the FrameStore).
					-	if <b>Auto</b> is disabled, only the current frame’s Anc region is cleared/zeroed.
				-	<b>Anc Exclusions:</b> menu <i>(capture mode only)</i> — Indicates which Anc packet types (Data IDs)
					are currently being excluded by the Anc Extractor. It can be used to add or remove Anc packet types from the exclusion set.
					-	<b>None (Show All Packets)</b> — Checked if the Anc Extractor is not filtering any packets.
						Choose this item to stop all packet filtering (i.e. to extract all packet types).
					-	<b>SD Defaults</b> — Checked if the Anc Extractor is not filtering SD audio packets.
						Choose this item to filter all SD audio packets.
					-	<b>HD Defaults</b> — Checked if the Anc Extractor is not filtering HD audio packets.
						Choose this item to filter all HD audio packets.
					-	<i>all other items</i> — The menu has dozens of pre-defined Anc packet types available for filtering.
						For each Anc packet type (i.e. Data ID, or DID)…
						-	If checked, the Anc Extractor is currently filtering that packet type (Data ID).
							Selecting the item will toggle its state and remove the DID from the Extractor’s filter set.
						-	If unchecked, the Anc Extractor is <i>not</i> currently filtering that packet type (Data ID).
							Selecting the item will toggle its state and add the DID to the Extractor’s filter set.
				-	<b>Anc Register Display</b>
					@image	html	watcher-inspector-anc-regs.png
					-	Visible only when the <b>Registers</b> menu is set to <b>Show</b>.
					-	It shows each of the inserter/extractor configuration registers.
					-	The register values are editable.
			-	<b>F1</b>
				-	<b>F1 Anc:</b> — This menu controls the F1 Anc data display:
					-	<b>Hide</b> — Hides the F1 buffer data display.
					-	<b>Raw</b> — Displays the F1 Anc region data as raw data. (See \ref inspectoranc-raw.)
					-	<b>Packets</b> — Decodes the F1 Anc region data, and lists the decoded ancillary data packets. (See \ref inspectoranc-pkt.)
				-	<b>Max Capacity:</b> — This indicates the current maximum capacity of the F1 Anc region, in bytes.
				-	<b>Overrun Indicator</b> <i>(capture mode only)</i> — This indicator will be visible and bright red if
					the F1 extractor is attempting to write past the end of its allotted buffer space.
					@image	html	watcher-inspector-anc-ovfl.png
				-	<b>Data Display Area</b>
					-	When shown, displays the “raw” F1 data buffer or the list of packets that were decoded from the buffer area.
			-	<b>F2</b>
				-	<b>F1 Anc:</b> — This menu controls the F2 Anc data display:
					-	<b>Hide</b> — Hides the F2 buffer data display.
					-	<b>Raw</b> — Displays the F2 Anc region data as raw data. (See \ref inspectoranc-raw.)
					-	<b>Packets</b> — Decodes the F2 Anc region data, and lists the decoded ancillary data packets. (See \ref inspectoranc-pkt.)
				-	<b>Max Capacity:</b> — This indicates the current maximum capacity of the F2 Anc region, in bytes.
				-	<b>Overrun Indicator</b> <i>(capture mode only)</i> — This indicator will be visible and bright red if
					the F2 extractor is attempting to write past the end of its allotted buffer space.
				-	<b>Data Display Area</b>
					-	When shown, displays the “raw” F1 data buffer or the list of packets that were decoded from the buffer area.

@subsubsection	inspectoranc-raw	Raw Data Display
	-	Displays the contents of the buffer as raw numeric data.
	-	Available in the <b>VANC</b>, <b>F1 Anc</b> and <b>F2 Anc</b> sections by choosing <b>Raw</b> in the menu.
	-	Data that changed from the previous buffer sample is highlighted with a brighter color.
	-	Right-click in the data content area to change how the data is formatted:
		-	<b>Grouping</b> — Choose byte grouping from <b>1</b>, <b>2</b>, <b>4</b> or <b>8</b> bytes.
		-	<b>Radix</b> — Choose from <b>binary</b>, <b>octal</b>, <b>decimal</b> or <b>hex</b>adecimal.
		-	<b>Bytes/Line</b> — Choose from <b>8</b>, <b>16</b>, <b>32</b>, … up to <b>4096</b> bytes per line.
			@note	The bytes-per-row count of the VANC display is fixed by the channel’s frame geometry.
	-	Right-click in the column heading area to change the horizontal scale:
		-	<b>Reference</b> — Choose <b>Byte Offset From Start</b> or <b>Byte Offset From End</b>.
		-	<b>Radix</b> — Choose <b>Dec (Base 10)</b> or <b>Hex (Base 16)</b>.
	-	Right-click in the row heading area to change the vertical scale:
		-	<b>Reference</b> — Choose <b>Byte Offset From Start</b> or <b>Byte Offset From End</b>.
		-	<b>Radix</b> — Choose <b>Dec (Base 10)</b> or <b>Hex (Base 16)</b>.

@subsubsection	inspectoranc-pkt	Packet Display
	-	Displays a list of ancillary data packets parsed from the buffer.
		@note	For buffers written into by the Anc Extractor firmware, the parser simply attempts to decode whatever
				packets it finds in the buffer. It’s generally not possible for NTV2Watcher to frame-accurately obtain
				the Inserter’s bytes-written counter. Thus it’s possible for invalid or stale packets to appear in the
				packet list. It can help to clear the Anc buffer (use the <b>Clear</b> button) and see if the suspected
				bad packets disappear.
	-	Available for the <b>VANC</b>, <b>F1 Anc</b> and <b>F2 Anc</b> buffers by choosing <b>Packets</b> from the
		display control menu.
	-	For each packet, it shows, in columns:
		-	<b>Pkt</b> — The index number in the list.
		-	<b>Cod</b> — Coding – <b>Ana</b>log or <b>Dig</b>ital.
		-	<b>Fmt</b> — Originating Buffer Format: <b>SDI</b>, <b>RTP</b> or <b>VANC</b>.
		-	<b>Timestamp</b> — For RTP, the timestamp from the RTP header;  otherwise, a frame sequence number.
		-	<b>Lnk</b> — The data link (A or B).
		-	<b>DS</b> — The data stream (DS1 … DS4).
		-	<b>Line</b> — On capture, the SMPTE line number where the data was found;  on playout, the SMPTE line number where the data is to be inserted.
		-	<b>HOff</b> — Horizontal Offset: or HANC or VANC.
		-	<b>Chn</b> — Channel: Luma (Y) or chroma (C).
		-	<b>DID</b> — The DID of the packet.
		-	<b>SDID</b> — The SDID of the packet.
		-	<b>Description</b> — Packet description.
		-	<b>DC</b> — Data Count of the payload data, in bytes (decimal and hex).
		-	<b>CS</b> — The checksum of the payload data, in hexadecimal. On playout, this value is irrelevant,
			since the inserter/embedder performs the checksum computation.
		-	<b>Data</b> — A dump of the first several bytes of payload data.
	-	Data values that changed from the previous buffer sample are highlighted with a brighter color.
	-	Packets missing from the prior buffer sample are shown in red (as “missing”).
		-	This behavior can be disabled by unchecking <b>Show Absent Packets</b> (near the top of the inspector).


Choose <b>Copy</b> from the <b>Edit</b> menu to copy a human-readable snapshot of the displayed information to the Clipboard.

@subsubsection	inspectoranc-caption	Closed-Caption Display
-	This inspector can be used to drive the \ref anc608viewer for monitoring closed-captions.
-	To prevent duplicate or multiple caption byte streams from being sent to the \ref anc608viewer …
	-	Only one of the Anc buffer regions should be visible, and it must be set to display “Packets”.
	-	Only one caption packet should be listed in the packet list.

@note	Hiding unneeded buffer displays uses fewer CPU resources, helping the inspector update at frame rate
		(which increases the fidelity of the \ref anc608viewer, if needed).

@subsubsection	inspectoranc-dragdrop	Drag and Drop Support
	-	<b>Auto</b> mode must be disabled (un-checked).
	-	Dropping a single file from outside the inspector window is supported.
	-	Dropping the file into the <b>F1 Anc</b> or <b>F2 Anc</b> data areas (if visible, in either <b>Raw</b>
		or <b>Packets</b> view) will write the binary contents of the file into the Anc region of the frame buffer.
	-	Dropping the file into the <b>VANC Anc</b> data area (if visible, in either <b>Raw</b> or <b>Packets</b>
		view) will write the binary contents of the file into the VANC lines (if VANC mode enabled) of the frame buffer.

@note Data coloring in the <b>Ancillary Data Inspector</b> can be configured in the <b>Colors</b> tab of the \ref watcherprefs dialog.


<hr size="50px">
@subsection	inspectorac		AutoCirculate Inspector

@image	html	watcher-inspector-ac.png

The <b>AutoCirculate</b> inspector monitors the \ref aboutautocirculate state for every available channel on the device.
When the <b>Poll</b> checkbox is checked/ticked, this inspector updates at the given polling <b>Interval</b> rate.
Information that changed from the last update is shown in a brighter color.

The inspector shows the following:
	-	<b>Streaming Application</b> — Shows the process ID and four-CC “signature” of the application that called CNTV2Card::SetStreamingApplication.
		See \ref devicesharing for more information.
	-	<b>AutoCirculate Status</b> — Formats and displays ::AUTOCIRCULATE_STATUS information pulled from the CNTV2Card::AutoCirculateGetStatus function
		call for each ::NTV2Channel.
	-	<b>Timecodes</b> — This area shows the contents of the ::NTV2TimeCodeList returned from CNTV2Card::AutoCirculateGetFrameStamp
		for each AutoCirculate frame buffer. Use the <b>Timecodes</b> popup menu to control which channel to display (or “Hide” to not display timecodes).
		@note	This area doesn’t appear on S2110 devices (i.e. \ref konaip \ref ioip running S2110 firmware).
				This is because the driver’s internal AutoCirculate structures are tied to the hardware timecode registers,
				which are uninvolved in S2110. In S2110, timecodes are obtained (capture) or produced (playout) in ATC-LTC
				or ATC-VITC packets embedded in RTP packet(s).

The inspector also provides the ability to control \ref aboutautocirculate.
	-	<b>Force Release</b> — Click to force the release of a streaming application that had previously reserved the device for exclusive use.
		See \ref devicesharing for more information.
	-	Right-clicking anywhere in a channel column will pop up a menu with these commands:
		-	<b>Start…</b> (or <b>Restart…</b>): Pops up the \ref inspectoracstart (see below).
		-	<b>Stop:</b>  Gracefully stops the \ref aboutautocirculate channel (by passing <b>false</b> to CNTV2Card::AutoCirculateStop).
		-	<b>Abort:</b>  Ungracefully stops the \ref aboutautocirculate channel (by passing <b>true</b> to CNTV2Card::AutoCirculateStop).
		-	<b>Pause:</b>  Pauses the running \ref aboutautocirculate channel (by calling CNTV2Card::AutoCirculatePause).
		-	<b>Resume:</b>  Resumes the paused \ref aboutautocirculate channel (by calling CNTV2Card::AutoCirculateResume).
		-	<b>Flush:</b>  Flushes the \ref aboutautocirculate channel (by calling CNTV2Card::AutoCirculateFlush).

@subsubsection	inspectoracstart	AutoCirculate Configuration Dialog

The <b>AutoCirculate</b> configuration dialog is used to configure a stopped \ref aboutautocirculate channel that is to be started,
or to reconfigure a running \ref aboutautocirculate channel (by restarting it with new operating parameters).

@image	html	watcher-autocirculate-config.png
	-	For a <b><i>Running</i></b> channel, clicking the <b>Restart</b> button will restart the AutoCirculate channel with the new settings
		specified in the dialog.
	-	For a <b><i>Stopped</i></b> channel, clicking the <b>Start</b> button will start the AutoCirculate channel with the settings
		specified in the dialog.
	-	<b>Mode:</b>  Selects \ref autocirculatecapture or \ref autocirculateplayout.
		(This menu will be disabled if the channel is <b><i>Running</i></b>.)
	-	<b>Frame Range:</b>  This group controls which frame buffers on the device will be used for buffering frames.
		-	<b>Start Frame:</b>  Chooses the starting frame number. (This will be disabled if <b>Automatic</b> is checked.)
		-	<b>End Frame:</b>  Chooses the ending frame number. (This will be disabled if <b>Automatic</b> is checked.)
		-	<b>Frame Count:</b>  Chooses the number of frames to be used.
		-	<b>Automatic:</b>  Given the desired <b>Frame Count</b>, lets AutoCirculate automatically choose which frames are to be used.
	-	<b>Options:</b>  This group controls the AutoCirculate options.
		-	<b>Audio:</b> Controls if audio will also be streamed, and if so, which ::NTV2AudioSystem to use.
		-	<b>RP188/VITC:</b> If checked, capture/play RP188/VITC timecode.
		-	<b>FBF Change:</b> If checked, tells AutoCirculate to anticipate changes to ::NTV2FrameBufferFormat while streaming.
		-	<b>Color Correction:</b> If checked, tells AutoCirculate to anticipate LUT changes while streaming.
		-	<b>Ancillary Data:</b> If checked, tells AutoCirculate to also capture/play custom ancillary data while streaming.
		-	<b>HDMI Aux Data:</b> If checked, tells AutoCirculate to also capture/play custom HDMI auxiliary data while streaming.
		-	<b>LTC:</b> If checked, tells AutoCirculate to also capture/play LTC while streaming.
		-	<b>FBO Change:</b> If checked, tells AutoCirculate to anticipate ::NTV2FBOrientation changes while streaming.
		-	<b>Video Processing:</b> If checked, tells AutoCirculate to anticipate Mixer/Keyer configuration changes while streaming.
		-	<b>Audio Control:</b> If checked, tells AutoCirculate to anticipate Audio Control changes while streaming.
		-	<b>Field Mode:</b> If checked, tells AutoCirculate to stream in <b>Field Mode</b> rather than the default <b>Frame Mode</b>.
	-	<b>Start Options:</b>  This group controls how AutoCirculate will be initialized/started:
		-	<b>Init Only:</b> If chosen, only CNTV2Card::AutoCirculateInit will be called. (CNTV2Card::AutoCirculateStart will <i>not</i> be called.)
		-	<b>Normal:</b> If chosen, AutoCirculate will be initialized and started normally (CNTV2Card::AutoCirculateStart is called with default parameters).
		-	<b>Delayed:</b> If chosen, AutoCirculate will be initialized (see CNTV2Card::AutoCirculateInit) and started (via CNTV2Card::AutoCirculateStart)
			with a non-zero <i>start time</i> value:
			-	<b>Milliseconds:</b>  Specifies the number of milliseconds to delay the start.

Choose <b>Copy</b> from the <b>Edit</b> menu to copy a human-readable frame-accurate snapshot of the AutoCirculate state of the device to the Clipboard.




<hr size="50px">
@subsection	inspectormixerkeyer		Mixer/Keyer Inspector

@image	html	watcher-inspector-mixer.png

The <b>Mixer/Keyer</b> inspector monitors and controls the device’s \ref vidop-mixerkeyer .

There is a group of controls for each Mixer/Keyer widget on the device:
	-	<b>Mixer Sync</b> — Indicates if the Mixer’s inputs are in-sync or not.
	-	<b>Foreground Input</b> — Shows what’s connected to the Mixer’s Foreground <b>Video</b> and <b>Key</b> inputs.
	-	<b>Background Input</b> — Shows what’s connected to the Mixer’s Background <b>Video</b> and <b>Key</b> inputs.
	-	<b>Mode</b> — Indicates and controls the Mixer’s mode. Choose from:
		-	<b>Foreground ON</b> — Foreground video and key is exclusively passed to the Mixer output.
		-	<b>Mix</b> — A mix of the foreground video over the background video is passed to the Mixer output.
			If either foreground or background <b>Flat Matte</b> is enabled, the Matte will be mixed instead of its
			respective video input.
		-	<b>Foreground OFF</b> —  Background video and key is exclusively passed to the Mixer output.
	-	<b>Mix Coefficient</b> — Indicates and controls the mix. Disabled when not in <b>Mix Mode</b>.
	-	<b>Foreground Input Control</b> — Indicates and controls what gets selected from the foreground input raster.
		-	<b>Full Raster</b> — Uses the full raster, disregarding any Foreground Key input.
		-	<b>Shaped</b> — Uses the Foreground Key input as a mask.
	-	<b>Background Input Control</b> — Indicates and controls what gets selected from the background input raster.
		-	<b>Full Raster</b> — Uses the full raster, disregarding any Background Key input.
		-	<b>Shaped</b> — Uses the Background Key input as a mask.
	-	<b>Matte Control</b> — Indicates and controls the <b>Flat Matte</b> feature, which overrides an input raster
		with a flat field of constant luminance and color:
		-	<b>Off</b> — Disables the feature.
		-	<b>Foreground</b> — Use the current <b>Flat Matte</b> color for the foreground.
		-	<b>Background</b> — Use the current <b>Flat Matte</b> color for the background.
	-	<b>Matte Color</b> — Indicates and controls the <b>Flat Matte</b> color. Disabled if the <b>Matte Control</b>
		is “Off”. To change the color, click the color swatch pushbutton, which brings up a color picker dialog box.
		Choose <b>OK</b> to set the selected color.
	-	<b>Output VANC Source</b> — Indicates and controls the Mixer‘s VANC pass-through.
		-	<b>Background Video</b> — Passes the background video’s VANC lines to the Mixer output.
		-	<b>Foreground Video</b> — Passes the foreground video’s VANC lines to the Mixer output.

Choose <b>Copy</b> from the <b>Edit</b> menu to copy a human-readable snapshot of the state of all Mixers to the Clipboard.




<hr size="50px">
@subsection	inspectorlut		LUT Inspector

@image	html	watcher-inspector-lut.png

The <b>LUT</b> inspector monitors and controls any one of the device’s LUT banks (see \ref vidop-lut ).
Because of access contention issues, it does not continually poll and update its LUT display.
Instead, the displayed table data must be manually loaded from the device on demand.

-	The data display is a 1,024-row table with three columns, one column per color component.
	It represents the contents of an in-host data buffer.
-	To load the in-host data buffer from the device, set the <b>LUT</b> of interest using the menu control,
	then right-click inside the table, and choose one of the <b>Load from Bank</b> commands.
	The contents of the in-host buffer are replaced.
-	To write/save the in-host data buffer to the device, set the <b>LUT</b> using the menu control,
	then right-click inside the table, and choose one of the <b>Write to Bank</b> commands.
-	To write/save the in-host data buffer to a host file, right-click inside the table,
	and choose an <b>Export</b> command.
-	The table can be edited any time:
	-	Make selections with the mouse and/or keyboard.
	-	Right-click in the table to pop up a context menu of several commands:
		-	<b>Copy</b> — Copies the highlighted cell data into the host scrap buffer for pasting elsewhere later.
		-	<b>Paste</b> — Pastes the host clipboard contents into the table starting at the top-left highlighted cell.
		-	<b>Select All</b> — Highlights all cells in the table.
		-	<b>Set From Predefined…</b> — Pops up a submenu of predefined LUTs, that if chosen, will replace the table contents:
			-	<b>Linear</b> — With this LUT, output component values will exactly match input component values.
			-	<b>Gamma 18 Rec601 (Full)</b>
			-	<b>Gamma 18 Rec709 (Full)</b>
			-	<b>Gamma 18 Rec601 (SMPTE)</b>
			-	<b>Gamma 18 Rec709 (SMPTE)</b>
			-	<b>RGB Full-Range SMPTE</b>
		-	<b>Import…</b> — Presents a standard file-picker dialog for choosing a CSV or tab-delimited data file to import.
			If confirmed, replaces the in-host buffer with the contents of the chosen data file.
		-	<b>Export Text…</b> — Presents a standard file-save dialog for exporting the table into a tab-delimited text file.
		-	<b>Export CSV…</b> — Presents a standard file-save dialog for exporting the table into a CSV file.
		-	<b>Load from Bank <i>N</i></b> — Discards the in-host buffer, and replaces its contents with the requested LUT bank from the device.
		-	<b>Write to Bank <i>N</i></b> — Writes the in-host buffer to the requested LUT bank on the device.
		-	<b>Fill Selection</b> — Fills the highlighted cells with the value of the right-clicked cell.
		-	<b>Fill Down</b> — Fills all highlighted cells with the values of the top-most cells.
		-	<b>Fill Right</b> — Fills all highlighted cells with the values of the left-most cells.
		-	<b>Clear</b> — Fills all highlighted cells with zero.
		-	<b>Invert</b> — Inverts the values in all highlighted cells (i.e. subtracts its current value from 1023).
	-	Double-click in a table cell to change its value.
	-	There is some <b>Drag & Drop</b> support:
		-	Dropping a CSV or tab-delimited data file into the table will replace some/all the in-host data buffer cell values
			with the contents of the file.
			-	Excess columns and/or rows are ignored in files containing more than 3 columns or more than 1024 rows.
			-	If the drop location is inside the table, the in-host buffer will be overwritten starting at the highlighted cell;
				otherwise, it will be overwritten starting at the top/left data cell.
	-	Changes made to the table are not saved unless explicitly exported (or copy/pasted) into a file, or written to the device.
		No warnings are given before replacing/overwriting the in-host table buffer being edited. There is no <b>Undo</b> facility.

			


<hr size="50px">
@subsection	inspectorregs		Registers Inspector

@image	html	watcher-inspector-regs.png

The <b>Regs</b> inspector monitors any number of real and/or virtual 32-bit registers at the current <b>Polling Interval</b>.
Its <b>Filter</b> feature permits immediate customization to focus on specific registers of interest.

When the <b>Poll</b> checkbox is checked/ticked, this inspector updates at the given polling <b>Interval</b> rate.
Register contents that changed from the last update are shown in a brighter color.

The inspector has the following:
	-	A scrollable table of registers, one register per row, in ascending register number (i.e. bar address) order.
	-	<b>Virtuals</b> — A checkbox that controls if virtual registers are included in the list or not.
	-	<b>Filter</b> — An editable text box whose content determines which registers are seen in the list.
		It’s accompanied by a pop-up menu containing several named register groups, and any saved filters.
		The text in the box acts as a filter:
		-	<i>empty</i> — No filtering takes place. All registers are shown.
		-	<i>decimal numbers</i> — A comma-separated list of register number ranges. For example:
			-	<b>25</b> — Only show register 25
			-	<b>25-31</b> — Only show registers 25, 26, 27, 28, 29, 30 and 31.
			-	<b>3,5,7</b> — Only show registers 3, 5 and 7.
			-	<b>3-7,20</b> — Only show registers 3, 4, 5, 6, 7 and 20.
		-	<b>kRegClass</b>… — A predefined group of registers.
			The popup menu shows these predefined register groups (e.g., inputs, outputs, HDMI, etc.).
		-	Anything else is used in a case-insensitive search for register names containing the text.
	-	<b>Save</b> — Available if the filter text isn’t currently a preset in the popup menu.
		Click to save the filter as a new preset.
	-	<b>Remove</b> — Available if the filter text matches a previously-saved preset in the popup menu.
		Click to remove it from the popup menu.

The register list is a table of register values in register number order.
Right-clicking in any of the column headings pops up a menu:
	-	<b>Column Display</b> — Controls which columns are shown, and their order:
		-	<b>Reg Number</b> — The register number
		-	<b>Reg Offset</b> — The register offset into its base address range (BAR).
		-	<b>Reg Name</b> — The register name.
		-	<b>Reg Value</b> — The register value.
		-	<b>Reg Decoded Value</b> — Text that shows the register value in a human-readable format.
	-	<b>Radix</b> — Controls the radix of the displayed register values.
		-	<b>Bin (Base 2)</b> — Display register values in base 2 (binary).
		-	<b>Oct (Base 8)</b> — Display register values in base 8 (octal).
		-	<b>Dec (Base 10)</b> — Display register values in base 10 (unsigned decimal).
		-	<b>Hex (Base 16)</b> — Display register values in base 16 (hexadecimal).

To change a register’s value:
	-	Click inside the register value. An edit box will appear.
	-	Change the value in the edit box as desired (keeping to the existing display radix).
	-	Press <b>Enter</b> or <b>Return</b> to confirm your changes, and write the new register value to the device.
		The edit box will disappear.
	-	Press <b>Escape</b> or click elsewhere to abandon your changes.
		The edit box will disappear.

Choose <b>Copy</b> from the <b>Edit</b> menu to copy to the host’s Clipboard a set of CNTV2Card::WriteRegister
function calls that will produce the register values seen in the display.

<b>TIP:</b>  The \ref regautocycler can be used to periodically cycle a register between a minimum and maximum value.



<hr size="50px">
@subsection	inspectorroute		Routing Inspector

@image	html	watcher-inspector-routing.png

The <b>Routing</b> inspector monitors and controls widget signal crosspoint routing as well as widget state (to some degree).

@note	This inspector replaces the original \ref usingcables utility with this significant difference:
		-	RGB and YCbCr output crosspoints are shown in separate sockets.
			In the old \ref usingcables they were shown as one socket, which caused some confusion.

The inspector has the following individual panels:
	-	<b>Routing Diagram</b> — Shows the device widgets and signal connections between them.
	-	<b>Code</b> — A text-only representation of the device’s current routing connections.
		It can display the routing in three different ways:
		-	<b>C++ Code</b> — C++ code that will produce the current routing configuration
			using CNTV2Card::Connect calls. This is the default.
		-	<b>Shorthand</b> — Widget connections are shown mnemonically.
	-	<b>Routing Registers</b> — A panel containing a list of the device’s routing registers.
		The register values are editable, and can be changed.

Choose <b>Print…</b> from the <b>File</b> menu to print a two-page report of the current routing configuration.

Choose <b>Copy</b> from the <b>Edit</b> menu to copy a human-readable snapshot of the displayed routing information to the Clipboard.

This inspector will accept plain text either pasted in (using the <b>Paste</b> command from the <b>Edit</b> menu),
or by dropping it in (using drag-and-drop) from another application. To be interpreted correctly as a set of routing
connections, the text must syntactically conform to:
	-	<b>C++ Statements</b> — One or more lines, each containing a call to CNTV2Card::Connect :
		@code{.cpp}
			device.Connect (NTV2_XptFrameBuffer1Input, NTV2_XptSDIIn1);
			device.Connect (NTV2_XptCSC1VidInput, NTV2_XptSDIIn1);
			device.Connect (NTV2_XptCSC2VidInput, NTV2_XptSDIIn1DS2);
			device.Connect (NTV2_XptLUT1Input, NTV2_XptCSC1VidRGB);
			device.Connect (NTV2_XptLUT2Input, NTV2_XptCSC2VidRGB);
			device.Connect (NTV2_XptSDIOut3Input, NTV2_XptSDIIn1);
			device.Connect (NTV2_XptSDIOut4Input, NTV2_XptSDIIn1DS2);
			device.Connect (NTV2_XptHDMIOutInput, NTV2_XptSDIIn1);
			device.Connect (NTV2_XptAnalogOutInput, NTV2_XptSDIIn1);
		@endcode
	-	<b>Shorthand Notation</b> — One or more lines having the “shorthand” notation:
		@code
			FB1 <== SDIIn1
			CSC1 <== SDIIn1
			CSC2 <== SDIIn1DS2
			LUT1 <== CSC1RGB
			LUT2 <== CSC2RGB
			SDIOut3 <== SDIIn1
			SDIOut4 <== SDIIn1DS2
			HDMIOutQ1 <== SDIIn1
			AnalogOut <== SDIIn1
		@endcode

<b>Routing Diagram</b>

The <b>Routing Diagram</b> is where routing changes are performed interactively. This is the panel in which most tasks are performed.

There are these principal types of objects in the diagram:
-	<b>Widgets</b> — These represent the functional widgets implemented in the device firmware, such as FrameStores, SDI Inputs, etc.
	-	<b>Widget</b>s contain one or more <b>Sockets</b> that represent each of the <b>Widget</b>’s crosspoint connections.
	-	<b>Sockets</b> are little square boxes inside a <b>Widget</b>.
		They cannot move independently — they always move with their owning <b>Widget</b>.
		There are two kinds of <b>Sockets</b>:
		-	<b>Input</b> — This is a signal “sink” or “destination” crosspoint.
			-	<b>Input</b>s are always on the widget’s left side.
			-	<b>Input</b>s can only be connected to one <b>Output</b> crosspoint.
			-	Depending on the parent <b>Widget</b>, <b>Input Socket</b>s sometimes can accept both RGB or YCbCr signals, or only RGB or YCbCr.
		-	<b>Output</b> — This is a signal “source” crosspoint.
			-	<b>Output</b>s are always on the widget’s right side.
			-	<b>Output</b>s can be connected to any number of <b>Input</b> crosspoints.
			-	<b>Output</b>s have a fixed signal type that they emit (if enabled): YCbCr or RGB.
	-	<b>Socket</b>s can be logically <b>enabled</b> or <b>disabled</b>, usually determined by
		the parent <b>Widget</b>’s configuration.
-	<b>Cables/Wires</b> — These represent the currently existing widget crosspoint connections,
	as read from the device’s “crosspoint select” registers.

Standard behaviors:
-	<b>Hovering</b>
	-	Hovering the mouse pointer over any object will display a “Tool Tip” that gives detailed information
		about the object and its current state.
-	<b>Right-Clicking</b>
	-	On <b>widgets</b> — Displays a context menu with commands that are relevant for the <b>widget</b> in its current state.
		-	<b>Disconnect</b> — Disconnects whatever is connected to the widget.
		-	<b>Show Legal Routes</b> — On devices that support this feature, displays all implemented crosspoint routes
			from every <b>input socket</b> and <b>output socket</b>.
		-	<b>Hide Legal Routes</b> — Hides any/all displayed implemented crosspoint routes.
	-	On enabled <b>output sockets</b> — Displays a context menu with these commands:
		-	<b>Disconnect</b> — Disconnects whatever is connected to the <b>output socket</b>, breaking the connection.
			(This command will be dimmed if the <b>output socket</b> has nothing connected to it.)
		-	<b>Connect To…</b> — Pops up a submenu listing the available <b>widget input socket</b> connections.
		-	<b>Show Legal Routes</b> — On devices that support this feature, displays all implemented crosspoint routes
			from the socket.
		-	<b>Hide Legal Routes</b> — Hides any/all displayed implemented crosspoint routes that originate with the socket.
	-	On enabled <b>input sockets</b> — Displays a context menu with these commands:
		-	<b>Disconnect</b> — Disconnects whatever is connected to the <b>input socket</b>, breaking the connection.
			(This menu command will be dimmed if the <b>input socket</b> has nothing connected to it.)
		-	<b>Connect To…</b> — Pops up a submenu listing the available <b>widget output socket</b> connections.
			This command will be labeled “Reconnect To…” if the <b>input socket</b> already has a <b>cable</b> connected to it.
		-	<b>Show Legal Routes</b> — On devices that support this feature, displays all implemented crosspoint routes
			that can terminate in the <b>input socket</b>.
		-	<b>Hide Legal Routes</b> — Hides any displayed implemented crosspoint routes that terminate at the <b>input socket</b>.
	-	On <b>cables</b> — Displays a context menu with these two commands:
		-	<b>Copy (Source Code)</b> — Copies the source code containing the CNTV2Card::Connect function call that’s
			relevant to the <b>cable</b> — i.e. the connection — to the clipboard.
		-	<b>Disconnect</b> — Disconnects the <b>cable</b>, breaking the connection.
	-	On <b>Framestore</b>s:
		-	<b>Disable</b> or <b>Enable</b>
		-	<b>Set to Playout</b> or <b>Set to Capture</b>
		-	<b>Video Format</b> — Changes the Framestore’s video format. If the device is Multi-Format capable, it will globally change
			the device to multi-format mode.
		-	<b>Pixel Format</b> — Changes the Framestore’s frame buffer format.
		-	<b>4K Mode</b> — Changes the Framestore’s “quad” mode to “squares” or “TSI” (if device is 4K-capable).
		-	<b>Inspect</b> — Opens the Framestore’s \ref inspectorframebuffer.
		-	<b>Fill…</b> — Opens the \ref fillbufferdlog .
		-	<b>Write Test Pattern</b> — Writes the chosen test pattern into the Framestore’s current Output Frame (playback mode only).
	-	On <b>CSC</b>s:
		-	<b>Colorspace Matrix</b> — Choose “Rec601” or “Rec709”.
		-	<b>RGB Range</b> — Choose “Full” or “SMPTE”.
		-	<b>Alpha Output</b> — Choose “Opaque” or “From Key”.
	-	On <b>LUT</b>s:
		-	<b>LUT Type</b> — Immediately rewrites the chosen LUT type to both banks of the LUT.
		-	<b>Bank</b> — Immediately changes the active LUT output bank.
		-	<b>Inspect</b> — Opens its \ref inspectorlut.
	-	On <b>Mixer/Keyer</b>s:
		-	<b>Inspect</b> — Opens the \ref inspectormixerkeyer.
	-	On <b>SDI Input</b>s:
		-	<b>Disable Input</b> or <b>Enable Input</b> — For bidirectional SDI connectors, immediately changes its direction.
		-	<b>3Gb->3Ga Conversion</b> — (3G/6G/12G only) Enables or disables the input’s 3Gb-to-3Ga converter.
		-	<b>CRC Checking</b> — (3G/6G/12G only) Enables or disables the input’s CRC error checking.
	-	On <b>SDI Output</b>s:
		-	<b>Disable Output</b> or <b>Enable Output</b> — For bidirectional SDI connectors, immediately changes its direction.
		-	<b>SDI Output Standard</b> — Sets the output’s video standard.
		-	<b>Video Limiting</b> — Sets SDI output video limiting for all device SDI outputs.
			-	<b>Off</b> — Disables output limiting.
			-	<b>Legal SDI</b> — SDI video output is limited to legal SDI.
			-	<b>Legal Broadcast</b> — SDI output is limited to legal broadcast.
		-	<b>3Ga->3Gb Conversion</b> — (3G/6G/12G only) Enables or disables the output’s 3Ga-to-3Gb converter.
		-	<b>RGB 3Ga Conversion</b> — (3G/6G/12G only) Enables or disables the output’s RGB 3Ga converter.
		-	<b>3G Enabled</b> — (3G/6G/12G only) Enables or disables 3G output. If disabled, the output is restricted to 1.5G.
		-	<b>3Gb Enabled</b> — (3G/6G/12G only) Enables or disables 3Gb output.
	-	In the background area — Displays a context menu with commands that globally affect the device:
		-	<b>Video Format</b> — Pops up a sub-menu of video formats supported by the device.
			Choosing one of these formats globally changes the video format for all FrameStores on the device.
			Note that if the device is multi-format capable, choosing a format here will place the device into single-format
			(“uniformat”) mode before globally changing the video format.
		-	<b>Pixel Format</b> — Pops up a sub-menu of frame buffer pixel formats supported by the device.
			Choosing one of the formats globally changes the pixel format for all FrameStores on the device.
		-	<b>4K Mode</b> — Available only if the device supports 4K/UHD video. If selected, pops up a sub-menu of 4K modes supported by the device:
			-	<b>Tsi</b> — Selects two-sample-interleave (per SMPTE 425-5).
			-	<b>Squares</b> — Selects the “quad” mode (aka “squares”).
		-	<b>8K Mode</b> — Available only if the device supports 8K/UHD2 video. If selected, pops up a sub-menu of 8K modes supported by the device:
			-	<b>Tsi</b> — Selects two-sample-interleave (per SMPTE 425-5).
			-	<b>Squares</b> — Selects “quad-quad” mode.
		-	<b>Clear Cables</b> — Deletes all <b>cable</b> connections.
		-	<b>Copy (Diagram)</b> — Copies the diagram image to the clipboard.
		-	<b>Copy (Source Code)</b> — Copies the CNTV2Card::Connect calls that are needed to produce the current routing as C/C++ source to the clipboard.
		-	<b>Paste Routing</b> — Replaces the current routing with the routing determined by the encoded text from the clipboard.
		-	<b>Load Preset</b> — Reveals a submenu of stored presets. Choosing one will replace the current routing with the saved Preset routing.
		-	<b>Delete Preset ‘</b><i>name</i><b>’</b> — Deletes the saved preset.
		-	<b>Add Preset…</b> — Prompts for a name under which to save the current routing configuration.
		-	<b>Show All</b> — Reveals all hidden widgets.
		-	<b>Hide Unconnected</b> — Hides all widgets that aren’t connected to anything else.
		-	<b>Reset Positions</b> — Reset the layout of all widgets back to their default positions.
-	<b>Drag & Drop</b>
	-	For IDEs, text editors and word processors that support dragging/dropping text, the <b>Routing Diagram</b> panel will accept
		text data containing C++ code that contains CNTV2Card::Connect calls. If the dropped code parses correctly, whatever is
		stipulated by the code will replace the current routing. (NOTE: The parser is dirt-simple — it only works if the <b>Connect</b>
		function’s parameters are ::NTV2InputCrosspointID and ::NTV2OutputCrosspointID enums.)

<b>Code Panel</b>

The Code Panel shows the device’s current routing configuration in textual form.
	-	It does this in one of two ways:
		-	<b>C++ Code</b> — shows the SDK calls necessary to produce the routing configuration.
		-	<b>Shorthand</b> — shows the “shorthand” notation for it.
	-	The text panel is read-only — i.e., you can’t change what’s in it.
	-	It supports dragging text from it for dropping elsewhere (e.g. into a code editor window).
	-	Left-clicking allows text in the panel to be highlighted (selected) interactively with the mouse.
	-	Right-clicking pops up a context menu with these commands:
		-	<b>Copy</b> — Copies whatever text is highlighted in the panel to the host clipboard.
		-	<b>Select All</b> — Highlights all of the text in the panel.
	-	Other controls:
		-	<b>Code</b> Menu — Selects which encoding form to display.
		-	<b>Presets</b> Menu — Shows which preset matches the device’s current routing configuration (if any).
			Choosing one of the presets will replace the device’s current routing with the selected one.
		-	<b>+</b> Button — Click to define a new preset for the device’s current routing configuration.
		-	<b>-</b> Button — Click to delete the current routing preset.

<b>Routing Registers Panel</b>

The Registers Panel shows the device’s routing registers.
To edit a register’s value, click in its value, change the value, then press Enter (or click elsewhere).
If this causes a routing change, the diagram (and code panel) will reflect the change.


@note The <b>Routing Inspector</b> has several preference settings in the <b>Cables</b> tab of the \ref watcherprefs dialog.



<hr size="50px">
@subsection	fillbufferdlog		“Fill Buffer” Tool

The <b>“Fill Buffer” Tool</b> is a handy debugging aid for filling device buffer memory with various values and/or patterns.

One or more frames can be written:
-	<b>Start Frame</b> — Specifies the first frame to be written.
-	<b>End Frame</b> — Determines the last frame to be written.
-	<b>All Frames</b> — Check this to quickly select all frames on the device to be written.

There are currently three ways to fill buffer memory:
	-#	<b>Numeric Value</b> — Fills one or more buffers with any 8, 16, 32 or 64-bit numeric value.
		@image	html	watcher-tool-fill-num.png
		Click <b>Apply</b> to write the numeric value into the frame buffer(s).
		Checkboxes are provided for skipping certain regions of each frame buffer being filled:
		-	<b>Field1</b> — Skips “Field 1” lines.
		-	<b>Field2</b> — Skips “Field 2” lines.
		-	<b>VANC</b> — Skips VANC lines. (Enabled only when the FrameStore geometry is “tall” or “taller”.)
		-	<b>Visible Raster</b> — Skips the visible raster lines.
		-	<b>Anc F1 Region</b> — Skips the F1 Ancillary Data region.
		-	<b>Anc F2 Region</b> — Skips the F2 Ancillary Data region.
	-#	<b>Test Pattern</b> — Fills one or more buffers with any of several predefined test patterns or colors.
		@image	html	watcher-tool-fill-pat.png
		The test pattern image is written to the buffer(s) immediately after selecting the test pattern or color.
	-#	<b>Color</b> — Fills one or more buffers with any color chosen from a standard color picker.
		@image	html	watcher-tool-fill-color.png
		The color raster is written immediately to the buffer(s) as the color is changed in the dialog.
	-#	<b>Text</b> — Fills one or more buffers with glyphs rendered using the ::CNTV2CaptionRenderer class.
		@image	html	watcher-tool-fill-txt.png
		Note that the frame buffer(s) are written immediately after making any changes or selections in the panel.
		-	<b>Display Text</b> — A text edit box for specifying the text to be rendered.
		-	<b>Blit Over Test Pattern</b> — Renders the text <i>after</i> [re]writing the test pattern into the frame buffer(s).
		-	<b>Y</b> and <b>X</b> Position — Starting position where text rendering begins in the frame.
			The coordinate units depend on the <b>Use Pixel Position</b> checkbox.
		-	<b>Use Pixel Position</b> — Determines the position coordinate units where the text is rendered.
			-	Unchecked — use CEA608 row/column coordinates.
			-	Checked — use pixel offset from the top-left corner (where top-left is 0,0).
		-	<b>Italic</b> — Check the box to render in italics;  un-check for non-italic (normal).
		-	<b>Underline</b> — Check the box to render with underline;  un-check for no underline (normal).
		-	<b>FG</b> — Specifies the foreground color attribute.
		-	<b>BG</b> — Specifies the background color attribute.
		-	<b>Opacity</b> — Specifies the opacity attribute: Opaque, Translucent, or Transparent.
		-	<b>Clear Caches</b> — Clears the ::CNTV2CaptionRenderer caches.	


<hr size="50px">
@subsection	anc608viewer		“EIA/CEA-608 Caption” Tool

@image	html	watcher-tool-608caption.png

The <b>EIA/CEA-608 Caption Tool</b> is a handy debugging aid for viewing EIA-608 and/or CEA-608 caption byte-pair streams.
It works with the \ref inspectoranc to supply its CEA-608 decoder with a stream of caption byte pairs to supply sufficient
context in order to properly render captions. The tool window is dominated by two panels:
	-	<b>Byte-Pair Stream</b> — Displays a hexadecimal representation of the caption byte-pair stream being decoded.
		-	The text represents a byte-pair FIFO that holds up to 90 byte pairs (maximum):
			-	New byte pairs enter the FIFO at the bottom-right corner.
			-	The oldest byte pairs drop out of the FIFO at the top-left corner.
		-	When no caption data is being streamed, the text content can be edited:
			-	You can select all or part of the text, and copy it to the host’s clipboard.
			-	You can add, remove, or change its contents by typing, or by pasting text from the clipboard.
			-	The text must consist of 2-byte hexadecimal “words” separated by a single space (case is irrelevant).
				Any other format will fail to decode properly.
				-	The left-most 2 digits (most-significant byte) is “byte 1”;
				-	The right-most 2 digits (least-significant byte) is “byte 2”.
				-	Byte sequences from “.scc” sidecar files should work (but remove the timecodes).
			-	<b>Example:</b> Try the byte-pair sequence “<tt>9425 94ad 9170 c845 cc4c 4f20</tt>” —
				it should render “Hello” for CC1.
	-	<b>Decoded Captions</b> — Renders the decoded captions, as they appear on-screen.
		-	The 608 decoder always re-decodes the entire FIFO whenever it changes, processing the byte pairs top-left to bottom-right.
			-	The last pair in the FIFO enters the decoder first;
			-	The first pair in the FIFO enters the decoder last.

A <b>Channel</b> selector menu is provided to change the caption channel being decoded and displayed:
	-	CC1 — the normal, primary (English language) closed-caption channel sourced from Field 1.
	-	CC2 — the secondary (often Spanish language) closed-caption channel, also sourced from Field 1.
	-	CC3, CC4 — additional closed-caption channels, sourced from Field 2.
	-	TX1, TX2 — text-only channels sourced from Field 1.
	-	TX3, TX4 — text-only channels sourced from Field 2.
	-	XDS is currently not available for decoding or display.

A <b>Reset</b> button is provided to manually reset the decoder, if necessary.
Add or remove a space to/from it to force the decoder to re-render what’s in the byte stream.

To render captions in real-time, the decoder’s byte-pair FIFO requires a steady stream of caption
byte-pairs transmitted by the \ref inspectoranc :
	-	<b>“Analog” Captioning</b> — All of the following are true:
		-	The monitored FrameStore/Channel is receiving or transmitting SD (U.S. NTSC 525i) video;
		-	The monitored FrameStore/Channel has a 'v210' or '2vuy' pixel format;
		-	The current frame buffer contains a valid “analog” caption byte pair encoded
			as a waveform per EIA-608 in “line 21” of active video.
	-	<b>VANC Frame Geometry</b> — All of the following are true:
		-	“Tall” or “Taller” VANC mode is enabled;
		-	The monitored FrameStore/Channel has a 'v210' or '2vuy' pixel format;
			-	If 8-bit YCbCr, VANC Shift Mode must be enabled;
		-	The VANC anc display is set to “Packets”;
		-	The packet display must contain:
			-	a CEA-708 packet that contains “Service 0“ CEA-608 caption data, or…
			-	at least one CEA-608 packet.
	-	<b>Anc Extractor/Inserter F1 and/or F2</b> — All of the following are true:
		-	The monitored Anc Inserter/Extractor must be running;
		-	The Field 1 or Field 2 displays (or both) must be set to display “Packets”.
		-	One of the packet displays contains:
			-	a CEA-708 packet that contains “Service 0“ CEA-608 caption data, or…
			-	a CEA-608 packet.

	@note	Successful caption rendering relies on getting a continuous byte pair sequence (no dropped frames).
			If the refresh rate of the \ref inspectoranc lags the frame rate, byte pairs will be
			skipped, resulting in garbled and unreadable captions. Hiding one or more of the
			\ref inspectoranc viewers (VANC, Anc Registers, F1, F2) can save CPU cycles and prevent lagging
			refresh rates.

To freeze the <b>Byte-Pair Stream</b> (perhaps to permit interacting with it manually),
leave the <b>Caption Viewer</b> window open, but do one of the following:
	-	Switch NTV2Watcher to an Inspector other than the \ref inspectoranc, or…
	-	Stop viewing “Packets” and instead switch to “Raw” or “Hide” in the \ref inspectoranc, or…
	-	Uncheck the <b>Polling</b> checkbox at the top of the main window.

<b>Generating Captions</b>

This tool can also generate caption byte pairs by using the controls at the bottom of the tool window:
	-	<b>Type</b> — This controls the type of caption to generate:
		-	<b>PopOn</b> — This uses the CNTV2CaptionEncoder608::EnqueuePopOnMessage function.
		-	<b>RollUp2</b> — This uses the CNTV2CaptionEncoder608::EnqueueRollUpMessage function to produce two-row “roll-up” captions.
		-	<b>RollUp3</b> — This uses the CNTV2CaptionEncoder608::EnqueueRollUpMessage function to produce three-row “roll-up” captions.
		-	<b>RollUp4</b> — This uses the CNTV2CaptionEncoder608::EnqueueRollUpMessage function to produce four-row “roll-up” captions.
		-	<b>PaintOn</b> — This uses the CNTV2CaptionEncoder608::EnqueuePaintOnMessage function.
	-	<b>Row</b> spin control — specifies the row number where the caption text will appear.
	-	<b>Col</b> spin control — specifies the column number where the caption text will begin.
	-	<b>FG</b> — Specifies the foreground color of the caption text.
	-	<b>BG</b> — Specifies the background color of the caption text.
	-	<b>Ital</b> checkbox — If checked, the caption text should be italicized.
	-	<b>Undr</b> checkbox — If checked, the caption text should be underlined.
	-	<b>Blnk</b> checkbox — If checked, the caption text should blink.
	-	Transparency popup menu — Choose from <b>Opaque</b>, <b>Translucent</b> or <b>Transparent</b>.
	-	<b>Text</b> box — Enter the caption text to be generated.
	-	Click <b>Xmit</b> to generate and “transmit” the caption byte pairs.
		These will be DMA’d starting at the current frame’s F1 Anc or VANC region (in the \ref inspectoranc).
		It will continue pulling byte pairs from the FIFO and DMA’ing into subsequent frame buffers on the device.


To close the <b>“CEA-608 Caption” Tool</b>:
	-	click its close box;
	-	or un-check the <b>View</b> menu’s <b>CEA608 Monitor</b> command.



<hr size="50px">
@subsection	regautocycler		“Register Cycler” Tool

The <b>“Register Cycler”</b> is a handy tool for automatically cycling the value of a register
from a minimum to a maximum numeric value at a particular step rate.

For example, it can be used to step an <b>OutputFrame</b> register to periodically cycle through several
pre-loaded frame images.

@image	html	watcher-tool-regcycler.png

<b>Controls:</b>
	-	<b>Reg</b> — Specifies the register to be cycled.
	-	<b>Min</b> — Specifies the minimum value for the register.
	-	<b>Max</b> — Specifies the maximum value for the register.
		When the register reaches this value, it will start over at the <b>Min</b> value.
	-	<b>Rate</b> slider — Adjusts the time between steps.
	-	<b>Start</b> — Starts the cycler running. When running, this button will be disabled and will be titled “Running”.
	-	<b>Stop</b> — Stops the cycler. When stopped, this button will be disabled and will be titled “Stopped”.

To close the <b>Register Cycler</b>:
	-	click its close box; or…
	-	un-check the <b>View</b> menu’s <b>Register Cycler</b> command.



<hr size="50px">
@subsection	tonegenerator		“Tone Generator” Tool

The <b>Tone Generator</b> is a handy tool for generating one or more channels of audio tones.

@image	html	watcher-tool-tonegen.png

<b>Controls:</b>
	-	<b>Function</b> — For each audio channel, determines if the audio channel is enabled or not,
		and if enabled, the waveform signal that will fill the channel.
		-	<b>Off</b> — Disables the channel, and produces silence (zero values).
		-	<b>Sine</b> — Produces sinusoidal waveform.
		-	<b>Trian</b> — Produces a triangle waveform.
		-	<b>Square</b> — Produces a square waveform.
		-	<b>Noise</b> — Produces pseudo-random noise.
	-	For enabled channels, additional controls are available:
		-	<b>Frequency</b> — Adjusts the frequency of the generated waveform (not available for <b>Noise</b>).
			For finer-grained control, click on the control, then adjust it using your keyboardʼs arrow keys.
		-	<b>Phase</b> — Adjusts the phase (time shift) of the generated waveform (not available for <b>Noise</b>).
		-	<b>Amplitude</b> — Adjusts the amplitude of the generated waveform.
		-	<b>Offset</b> — Adjusts the (amplitude) offset of the generated waveform (like adding a DC component to it).
		-	<b>Duty Cycle</b> — Adjusts the duty cycle (for <b>Square</b> or <b>Triangle</b> waveforms only).
	-	<b>Audio System</b> popup menu — Specifies the target Audio System whose buffer will receive the generated audio samples.
		Choosing a new Audio System will automatically stop the generator (if running).
	-	<b>Fill</b> — Generates samples and fills the given Audio System’s entire output buffer in a one-shot operation.
	-	<b>Start</b> — Starts the generator to run continuously.
		When running, this button will be disabled and will be titled “Running”.
	-	<b>Stop</b> — Stops the generator.
		When stopped, this button will be disabled and will be titled “Stopped”.

To close the <b>Tone Generator</b> tool window:
	-	click its close box;  or…
	-	un-check the <b>View</b> menu’s <b>Tone Generator</b> command.



<hr size="50px">
@subsection	memmapdlog		“Memory Map” Tool

@image	html	watcher-tool-memmap.png

The <b>Memory Map</b> is a handy debugging aid for visualizing how device memory is being used.
It can readily indicate \ref vidop-fbconflict and/or \ref audioclobber.

-	The top of the window has two indicators:
	-	<b>Intrinsic Frame Size</b> — indicates the “natural” size of a non-4K, non-8K frame, in megabytes.
		This is what the hardware is using for normal, non-4K/8K frames.
	-	<b>Total SDRAM</b> — displays the total SDRAM complement of the device, in megabytes.
-	The remainder of the window contains the <b>Memory Map</b>:
	-	The horizontal space represents the device’s addressable SDRAM storage:
		-	Address zero (0x00000000) is at the far left edge;
		-	The highest addressable byte is at the far right edge.
	-	The vertical space is irrelevant.
	-	<b>Scrolling</b> — When needed, scroll bars are provided to allow scrolling offscreen areas of the Map into view.
	-	<b>Zoom Controls</b> — Click <b>+</b> to zoom in;  click <b>−</b> to zoom out.
	-	Memory Region objects:
		-	<b>Frame</b> — The gray boxes represent the intrinsic 8MB or 16MB frame boundaries.
			-	The numeric labels show the zero-based frame number.
			-	Each frame represents a specific, unique byte range in device memory. No two frames ever overlap.
			-	The width indicates the device’s <b>Intrinsic Frame Size</b>. At this time, NTV2 devices use an
				intrinsic frame size of either 8MB or 16MB.
			-	Double-click to open the \ref inspectorframebuffer and view the raw frame data.
			-	Right-click for a context menu:
				-	<b>Inspect</b> — opens the \ref inspectorframebuffer to view the raw frame data.
		-	<b>AutoCirculate</b> — These translucent boxes span multiple Frames, and represents the frames being used
			by an \ref aboutautocirculate channel.
			-	Color depends on the Channel video format: green for SD, purple for HD, etc.
			-	Label identifies the Mode and Channel (e.g. “In1”, “Out2”, etc.).
			-	When in <b>Quad Mode</b> (4K/UHD) or <b>Quad-Quad Mode</b> (8K/UHD2), the logical frame size is 4 or 16 times
				(respectively) the device’s intrinsic frame size.
			-	Double-click to open the \ref inspectorac.
			-	Right-click for a context menu:
				-	<b>Inspect</b> — opens the \ref inspectorac.
				-	<b>Stop</b> — stops the channel.
				-	<b>Pause</b> — pauses the channel.
				-	<b>Resume</b> — resumes the channel.
			-	Drag to change the channel’s frame range (it will be restarted).
		-	<b>Video Read</b> — (Green) — Represents the “Output Frame” being read by an enabled FrameStore.
			-	Labeled with the FrameStore’s channel number (e.g. “1”, “2”, etc.).
			-	In memory, NTV2 FrameStore widgets (see \ref vidop-fs ) always read video starting at the frame boundary
				(at the lowest address).
			-	The width of the box indicates how much memory is being read by the FrameStore.
			-	Double-click to open the \ref inspectorframebuffer and view the frame image.
			-	Right-click for a context menu:
				-	<b>Inspect</b> — opens the \ref inspectorframebuffer to view the frame image.
				-	<b>Disable</b> — disables (turns off) the FrameStore.
			-	Drag to interactively change the FrameStore’s “Output Frame”.
		-	<b>Video Write</b> — (Red) — Represents the “Input Frame” being written by an enabled FrameStore.
			-	Labeled with the FrameStore’s channel number (e.g. “1”, “2”, etc.).
			-	In memory, NTV2 FrameStore widgets (see \ref vidop-fs ) always write video starting at the frame boundary
				(at the lowest address).
			-	The width of the box indicates how much memory is being written by the FrameStore.
			-	Double-click to open the \ref inspectorframebuffer and view the frame image.
			-	Right-click for a context menu:
				-	<b>Inspect</b> — opens the \ref inspectorframebuffer to view the frame image.
				-	<b>Disable</b> — disables (turns off) the FrameStore.
			-	Drag to interactively change the FrameStore’s “Input Frame”.
		-	<b>Audio Read</b> — (Green) — Represents the playout audio buffer being read during \ref audioplayout .
			-	Labeled with the Audio System (e.g. “A1”, “A2”, etc.).
			-	Double-click to open the \ref inspectoraudio and reveal the audio buffer’s contents.
			-	Right-click for a context menu:
				-	<b>Inspect</b> — opens the \ref inspectoraudio to reveal the audio buffer’s contents.
				-	<b>Stop Playback</b> — stops the audio system’s playback engine.
		-	<b>Audio Write</b> — (Red) — Represents the capture audio buffer being written during \ref audiocapture .
			-	Labeled with the Audio System (e.g. “A1”, “A2”, etc.).
			-	Double-click to open the \ref inspectoraudio and reveal the audio buffer’s contents.
			-	Right-click for a context menu:
				-	<b>Inspect</b> — opens the \ref inspectoraudio to reveal the audio buffer’s contents.
				-	<b>Stop Recording</b> — stops the audio system’s record/capture engine.
		-	You can <b>hover</b> over any object to display a tooltip that contains detailed information about the region.

To close the <b>Memory Map</b> tool window:
	-	click its close box;
	-	or un-check the <b>View</b> menu’s <b>Memory Map</b> command.



<hr size="50px">
@subsection	scraptool		“Scrap Buffer” Tool

@image	html	watcher-tool-scrap.png

The <b>Scrap Buffer</b> is a handy debugging aid for viewing data buffers, including the contents of the host operating system’s
“desk scrap” buffer (aka “clipboard” or “paste buffer”). It also displays the contents of files or text clippings dropped into
the window.

-	Each buffer is represented by a tab in the window.
-	The <b>Clipboard</b> tab is monitored and automatically udpates as it changes. (Files, however, are not monitored.)
-	The window title indicates the data set, its byte count, and if it’s been modified.
-	Left-click the tab title to reveal its data content, bringing it to the front.
	-	Right-click inside the tab content for a context menu.
		-	<b>Data Editing:</b>
			-	<b>Undo</b> — Un-does the last operation that was done.
			-	<b>Redo</b> — Re-does the last undone operation.
			-	<b>Cut</b> — Copies the selected data to the clipboard/scrap buffer, then removes it.
			-	<b>Copy</b> — Copies the selected data to the clipboard/scrap buffer.
			-	<b>Paste</b> — Pastes the clipboard/scrap data over the selected data, or, if there’s nothing selected,
				inserts the data at the right-click location.
			-	<b>Clear</b> — Removes the selected data.
			-	<b>Select All</b> — Selects (highlights) all data.
		-	<b>Data View Options:</b>
			-	<b>Grouping</b> — Changes the data grouping to 8-bit (1-byte), 16-bit (2-byte), 32-bit (4-byte) or 64-bit (8-byte).
			-	<b>Radix</b> — Changes the radix of the data to Binary, Octal, Decimal or Hexadecimal.
			-	<b>Bytes/Line</b> — Changes the number of bytes to display in each line of the data view.
				Choose from 8 bytes up to 8K bytes by powers of 2.
				Note that larger values make for fewer lines and many more columns.
				Smaller values show many more lines with fewer columns.
			-	<b>Endianness</b> — Changes the display byte-ordering for 2/4/8-byte grouping. Choose “Big Endian” or “Little Endian”.
				One of the two options will indicate the host processor’s native endianness.
			-	<b>Show Rulers</b> — When available, shows whichever rulers were previously hidden.
			-	<b>Show/Hide ASCII</b> — Reveals or hides a side panel that displays the same row data as printable ASCII.
	-	<b>Row & Column Label Options</b> — (Right-Click Operations)
		-	<b>Reference</b> — Choose “Byte Offset From Start” or “Byte Offset From End”.
		-	<b>Radix</b> — Choose “Binary”, “Octal”, “Decimal” or “Hexadecimal”.
		-	<b>Hide</b> — Hides the ruler. (To show the ruler again, right-click in the data and choose “Show Rulers”.
-	Right-click the tab title to pop-up a context menu of <b>File Operations</b>:
	-	<b>New (Dupe)</b> — Duplicates the tab content in another new tab.
	-	<b>Open…</b> — Brings up a file picker dialog box for choosing a data file to open a new tab on.
	-	<b>Close</b> — Requests the tab be closed. If there are unsaved changes, you’ll be asked if you wish to save them or not.
	-	<b>Compare</b> — Compares the tab contents with another tab’s contents, highlighting the differences with a brighter color.
	-	<b>Revert</b> — Prompts if changes should be discarded and the tab content reloaded from the file as saved on disk.
	-	<b>Save</b> — Writes the tab contents to the file on disk.
	-	<b>Save As…</b> — Brings up the standard Save As… dialog box for choosing the name of a file to be written with the tab data content.
	-	<b>Page Setup…</b> — Brings up the standard Print Setup… dialog box for choosing the print page layout.
	-	<b>Print…</b> — Brings up the standard Print… dialog box for printing the tab data content.

To close the <b>Scrap Buffer</b> tool window:
	-	click its close box;
	-	or un-check the <b>View</b> menu’s <b>Scrap Buffer</b> command.
	-	If there are unsaved changes in any of the open tabs, you’ll be given an opportunity to save them all, discard them all,
		or cancel the close request.



<hr size="50px">
@subsection	demostool		“SDK Demos” Tool

The <b>SDK Demos</b> tool makes it easy to quickly configure and run SDK demo programs directly from <b>NTV2Watcher</b>
without having to use an external command-line Terminal or remember option parameter names.

@image	html	watcher-tool-demos-config.png

The <b>Configure</b> tab is the first tab, is always present, and is where demo apps are configured and started.
It has no close box … and thus cannot be closed.

To close the <b>SDK Demos</b> tool window:
	-	click its close box;
	-	or un-check the <b>View</b> menu’s <b>SDK Demos</b> command.

@par	Starting a demo

-	From the <b>Demo:</b> menu, choose the demo to run.
	@note	If the <b>Run</b> button (in the bottom-right corner) is dimmed (disabled), the demo executable
			could not be found in folders (or sub-folders) starting in the folder that contains <b>NTV2Watcher</b>.
-	The <b>Parameters and Options</b> section will re-populate with those options and parameters supported
	by the chosen demo.
-	Make any option choices and parameter selections as desired.
	The <b>Command Line</b> will automatically update as option choices and parameter selections change.
-	Click <b>Run</b> to start the demo. A new tab will be created to show the status of the running demo.

@par	Monitoring the running demo

-	Each running demo is represented by a separate tab.
-	The tab title indicates which demo app was (or is still) running.
-	Hovering over the tab title pops up a tooltip that shows the full path to the demo executable file.
-	Left-click the tab title to bring its content to the front.
-	Right-click the tab title to pop-up a context menu:
	-	<b>Close</b> — Closes the tab. If its corresponding SDK demo is running, it will be terminated.
	-	<b>Save…</b> — Choose this to open a standard <b>Save As…</b> dialog box for choosing the name
		and location of a text file to be filled with the demo’s output text.
	-	<b>Terminate</b> — Choose this to terminate the running demo.
-	The cyan-colored text at the top shows the command line that was (or is still) running.
	The text panel below it indicates the execution status:
	-	<b>completed normally</b> (green) indicates the demo ran and completed without errors.
		@image	html	watcher-tool-demos-done.png
	-	<b>running</b> (yellow) indicates the demo is still running.
		@image	html	watcher-tool-demos-running.png
	-	<b>terminated abnormally with exit code</b> (red) indicates the demo terminated with a
		non-zero exit code.
		@image	html	watcher-tool-demos-abend.png
-	Click <b>Stop</b> to terminate the running demo.
-	Click <b>Re-Run</b> to re-run the completed (or terminated) demo.

@note	Closing the <b>SDK Demos</b> window closes all demo tabs, and thus terminate any running demos.



<hr size="50px">
@subsection	debugstats		“AJADebug Stats” Tool

@image	html	watcher-tool-debugstats.png

The <b>AJADebug Stats</b> tool monitors active ::AJADebugStat instances.

-	The very top of the window shows the version number and size of the ::AJADebug facility’s shared memory buffer.
	It also shows the number of active ::AJADebugStat instances (and the maximum number of stats that the shared buffer can accommodate).
-	The window can be resized, and the monitored ::AJADebugStat instances will automatically “reflow” to fit within the given window dimensions.
-	Right-click in the window to pop-up its context menu:
	-	<b>Named Stats</b> — Pops up a sub-menu of known stats that can be monitored.
		Selecting a named stat adds it to those being monitored in the window.
	-	<b>Show Details</b> — Expands all monitored ::AJADebugStat instances to show all their information (max, min, count, average, etc.).
	-	<b>Hide Details</b> — Shrinks all monitored ::AJADebugStat instances to only show the minimum information.
	-	<b>Reset All</b> — Resets all monitored ::AJADebugStat instances (such that their max, min and moving average computations are restarted).
-	Right-click in a monitored ::AJADebugStat instance to pop-up its context menu:
	-	<b>Min</b> — If checked, displays the smallest value ever seen for the stat (since last reset).
	-	<b>Max</b> — If checked, displays the largest value ever seen for the stat (since last reset).
	-	<b>Count</b> — If checked, displays the number of times the stat value was updated.
	-	<b>Timestamp</b> — If checked, displays the host operating system timestamp when the stat value was last updated.
	-	<b>Value</b> — If checked, displays the latest (instantaneous) value.
	-	<b>Avg</b> — If checked, displays the moving average value.
	-	<b>Format</b> — Pops up a sub-menu for changing the display format of the stat value as <b>Decimal</b> (base 10),
		<b>Hex</b> (base 16), and <b>Float</b> (in floating-point).
	-	<b>Designated Timer</b> — If checked, declares the stat to be a timer, which displays its data as timing measurements.
		If not checked, declares the stat to NOT be a timer, which displays its data as simple numeric values.
	-	<b>Delete</b> — Stops monitoring the ::AJADebugStat instance, removing it from the stats being displayed.

To close the <b>SDK Demos</b> tool window:
	-	click its close box;
	-	or un-check the <b>View</b> menu’s <b>AJADebug Stats</b> command.



<hr size="50px">
@subsection	debuglog		“AJADebug Log” Tool

The <b>AJADebug Log</b> tool allows you to monitor, in near real time, log messages originated by the ::AJADebug facility.
It has several handy features:
-	Filtering based on message content.
-	Filter based on message classification and/or severity.
-	Colorize messages based on originating process ID.
-	Calculate time between two messages.
-	Log recording, snapshotting, copying (clipboard) and printing.

The user interface consists of the <b>AJA Debug Log</b> window that has three parts:
-	A button bar at the top that allows you to configure what is seen (or not seen) in the main view;
-	The main view containing the log display with column headings;
-	A status bar at the bottom that shows logging activity statistics.

To close the <b>AJADebug Log</b> tool window:
	-	click its close box;
	-	or un-check the <b>View</b> menu’s <b>AJADebug Log</b> command.

@image	html	watcher-tool-debuglog.png

@par	Operation

The Main View shows log messages in tabular fashion, one log entry per row, with the log entry data shown in columns.
The tool bar at the top has the following controls:
-	<b>Message Groups…</b>: Click to open the <b>Enable/Disable Message Groups</b> dialog:
	@image	html	logger-enables.png
-	<b>Log to File</b>: Enables or disables recording incoming messages to a log file.
-	<b>Save…</b>: Saves the contents of the message display to a file of the user’s choosing.
-	<b>Font…</b>: Opens a font dialog to change the font and size of the log display.
-	<b>Clear</b>: Erases all captured messages from the log display.
-	<b>AutoScroll</b>: Enables or disables the auto-scrolling feature.
-	<b>Pause</b>: Pauses or resumes the capture/display of new messages.
-	<b>Add Marker</b>: Inserts a marker into the log.
-	<b>Auto Group</b>: Specifies a “quiet time”, in seconds, that if no messages are logged in that interval,
	the first that arrives after it transpires will automatically be preceded by a marker entry.
-	<b>Message Filter</b>: If non-empty, filters the log display such that it will only show messages containing
	the filter text.

The data columns are as follows:
-	<b>Index</b>: The unique index number of the message. This number starts at zero when the AJA Debug Facility is initialized.
-	<b>PID</b>: The ID of the message’s originating host process.
-	<b>TID</b>: The ID of the message’s originating host thread.
-	<b>Time</b>: The host timestamp when the message entered the AJA Debug Facility’s ring buffer.
-	<b>Group</b>: The message’s classification group (see ::AJADebugUnit).
-	<b>Severity</b>: The message’s severity (see ::AJADebugSeverity).
-	<b>Source</b>: The message’s originating source file name and line number (if known).
-	<b>Message</b>: The log message text.

By default, all columns are visible. If needed, any of the columns (except for <b>Message</b>) can be hidden.
-	To hide a column, uncheck it in the <b>View</b> menu’s <b>Column</b> sub-menu.
-	To re-show a column, check it.
-	To quickly re-show all columns, choose the <b>Show All Columns</b> command in the <b>Column</b> submenu in the <b>View</b> menu.

Messages are always displayed in increasing index/time order, top-to-bottom.

The <b>Status Bar</b> shows:
-	<b>File Recording State</b>:  If the logger’s “Log” setting is enabled, it shows the path of the log file
	being written, and its size, in bytes.  If the logger’s “Log” setting is off, it shows “not logging to file”.
-	<b>Message Stats</b>:
	-	<b>Ignored</b>: The number of messages that were reported by ::AJADebug clients, but ignored by the AJA Logger.
		You can choose the kinds of messages to ignore by showing the <b>Enables</b> dialog box by clicking the
		<b>Enables</b> button. You can also pause the logger by clicking the <b>Pause</b> button.
	-	<b>Accepted</b>: The number of messages that were reported by ::AJADebug clients, and accepted for display
		by the AJA Logger application.
	-	<b>Total</b>: The total number of messages that were reported by ::AJADebug clients.
	-	<b>Ref Count</b>: The number of attached clients that are currently monitoring ::AJADebug activity.

As new messages are reported to the ::AJADebug logging facility, these are detected and, if configured to show them,
incorporated into the log display. If <b>AutoScroll</b> is enabled, the display will auto-scroll to the bottom, to
continually show the newest message.

@note	Log messages containing line breaks (newline characters) are displayed in a single row, with the message text
		truncated at the first line break in the message with an ellipsis (‘…’). If logging to a file, the message text
		is written to the log file unchanged (including line breaks).

@par	Selecting and Copying Data

Clicking inside the Main View highlights (selects) information on a per-messsage (row) basis.
The usual rules of selection are followed:
-	“Shift-click” — Extends the selection.
-	“Ctrl-click” or “Command-click” — Extends or contracts the selection.
-	“Dragging” — Continues to extend (or contract) the selection while the mouse button is down (and auto-scrolls, too).

Right-clicking inside the Main View pops up a context menu:
-	<b>Set row color for PID…</b> — 
-	<b>Copy</b> — Copies selected log entries to the host’s clipboard.
-	<b>Clear</b> — Clears the entire log display.
-	<b>Select All</b> — Selects (highlights) all captured log entries.
-	<b>Columns</b> — Chooses which columns (fields) are shown.
	-	<b>Index</b> — If checked, shows the log message sequence (index) number.
	-	<b>PID</b> — If checked, shows the originating process IDs.
	-	<b>TID</b> — If checked, shows the originating thread IDs.
	-	<b>Time</b> — If checked, shows the timestamp when the message was received.
	-	<b>Group</b> — If checked, shows the message group.
	-	<b>Severity</b> — If checked, shows the message severity.
	-	<b>Source</b> — If checked, shows the originating source file name.
	-	<b>Show All Columns</b> — Choose this item to enable all columns (fields).
-	<b>Grid</b> — If checked, displays a grid between columns and rows.
-	<b>AutoScroll</b> or <b>Stop AutoScroll</b> — Choose this item to enable or disable auto-scrolling.
-	<b>Auto-Resize Columns</b> — Choose this item to toggle column auto-resizing.
-	<b>Font…</b> — Choose this item to choose a different display font and/or size.
-	<b>Message Groups…</b> — Choose this item to open the \ref loggerconfig.
-	<b>Add Marker</b> — Choose this item to insert a marker into the log.
-	<b>Pause</b> or <b>Resume</b> — Choose this item to pause or resume the capture and display of
	new incoming log messages.
-	<b>Log to File</b> — Choose this item to start or stop the capture of incoming log message to
	a local host file.
-	<b>Text Delimiter</b> — Choose this item to pop up a sub-menu to choose a different column delimiter.
-	<b>Page Setup…</b> — Choose this item to pop up the Page Setup dialog.
-	<b>Print…</b> — Choose this item to bring up the Print dialog to print the captured log.
-	<b>Reset Ref Count</b> — Choose this item to reset the ::AJADebug facility’s reference counter.

@par	Logging to a File

To toggle the automatic recording of incoming messages into a file on the host:
-	Click the <b>Log to File</b> button;
-	or choose <b>Log to File</b> in the context menu.

When enabled:
-	The path to the file (and its current size, in bytes) is displayed in the Status Bar, on the left side.
-	The file is written in clear text, in UTF-8 encoding, one line per message.
-	The line delimiter used is native to the host operating system.
-	The field delimiter is user-selectable, and defaults to the semicolon (“;”).
	-	To change it, choose the <b>Text Delimiter</b> command in the context menu …
		then choose the desired delimiter (<b>semicolon</b>, <b>colon</b>, <b>comma</b>,
		<b>space</b>, or <b>tab</b>).
	-	Subsequent writes to the file will use the new delimiter.
-	Log messages that contain line breaks in the message text are written into the log file without change.

To toggle file logging on or off, click the <b>Log to File</b> button in the Toolbar, or un-check its command in the <b>Action</b> menu.

@par	Clearing the Log Display

To clear the log display, do one of the following:
-	click the <b>Clear</b> button;
-	or choose <b>Clear</b> from the context menu;
-	or press the forward-delete key.

@par	Pausing or Resuming the Log Display

To pause the capture and display of new incoming messages:
-	click the <b>Pause</b> button;
-	or choose <b>Pause</b> in the context menu.

Even if paused, new messages are still recorded in the log file (if file logging is enabled).

To resume capture and display of new messages:
-	click the <b>Resume</b> button;
-	or choose <b>Resume</b> in the context menu.

@par	Inserting Markers Into the Log

An “elapsed time” marker is automatically inserted into the log when a new log message is captured
after a user-configurable number of seconds has passed since the last accepted message was received.
The default time interval is 86400 seconds (one day).
To change time interval, type a new value, in seconds, into the <b>Auto Group</b> edit box …
then press Return, Enter or Tab.

To manually insert a marker into the log, click the <b>Add Marker</b> button.
It will be timestamped and appended to the log.

@par	Changing the Display Font/Typeface

To change the typeface used in the log display, click the <b>Font…</b> button or the <b>Font…</b>
command in the context menu. The host-specific Font-chooser dialog box will appear.
Choose the font family, size and style, then click <b>OK</b>.
The Main View will be redrawn using the new typeface.

@par	Changing the Message Color Based on Process ID

<b>AJADebug Log</b> can display messages having the same process ID (PID) with a chosen background color,
making it easy to differentiate messages coming from different processes on the host computer.
-	Right-click on the message(s) having the desired process ID you wish to colorize.
-	Choose <b>Set row color for PID…</b>.
-	A color picker dialog will appear. Choose the new desired background color, then click OK.

All messages having that process ID will be drawn with the newly-chosen background color.

@par	Resizing Columns

<b>AJADebug Log</b> can automatically adjust its column widths based on the widest data in the column.
When the <b>Auto-Resize Columns</b> item in the context menu is checked, columns will automatically
resize based on the captured messages being displayed. If the item is unchecked, column widths are fixed.
Choose the <b>Auto-Resize Columns</b> item to toggle its setting.

To manually resize a column, click on the column’s border in the column heading, and drag.

@par	Filtering Displayed Messages

To see only those messages that contain a particular character string, enter the search text into
the <b>Message Filter</b> edit box … then press Return, Enter or Tab. Henceforth, you’ll only see
messages that contain that text — all others will be excluded and invisible.

@note	This will only affect messages received by AJA Logger <i>after</i> changing the
<b>Message Filter</b> text.

To stop filtering displayed messages, delete all text from the <b>Message Filter</b> edit box …
then press Return, Enter or Tab.

@par	Measuring the Time Between Two Messages

To measure the time span between two messages in the display:
-	Click the <b>Stop AutoScroll</b> button. This makes it easier to select the desired message.
-	Scroll to reveal the first message, then (left) click on it.
-	Scroll to reveal the second message, then Command-Click (MacOS) or Control-Click on it.
-	Right-click on either of the two highlighted messages.
-	Note the elapsed “Time Difference” is the first item in the popup menu.


@subsubsection	loggerconfig	Enable/Disable Message Groups Dialog

@image	html	logger-enables.png

<b>AJADebug Tool</b> has powerful filtering capabilities that make it easy to “include everything
except…” or “exclude everything but…” or a combination.

To reveal the <b>Enable/Disable Message Groups</b> dialog box:
-	click the <b>Message Groups…</b> button;
-	or choose the <b>Message Groups…</b> command from the context menu.

The dialog box has two sections:
-	<b>Groups</b> — Enable or disable message display by group (aka ::AJADebugUnit).
-	<b>Severity</b> — Enable or disable message display by severity (aka ::AJADebugSeverity).

Each checkbox is “live” — i.e. toggling a checkbox takes effect immediately.

There are handy pushbuttons for immediately enabling or disabling all of the Group or Severity
checkboxes.

Click <b>OK</b> to dismiss (hide) the dialog box.


@subsubsection	loggercustom	How to Post Messages

SDK clients can post their own messages with the ::AJADebug facility.

-#	In your source file(s), \c #include \c "ajadebug.h" .
-#	Be sure to link with the <b>libajantv2</b> library.
-#	When the application starts, call AJADebug::Open.
-#	Call AJADebug::Report to log a message … or use one of the ::AJA_sDEBUG, ::AJA_sINFO,
	::AJA_sNOTICE, etc. macros.




<hr size="50px">
@subsection	watcherprefs		NTV2Watcher Preferences

The <b>Preferences</b> dialog is opened by choosing the “Preferences…” menu command, which is located…
-	MacOS:  under the “NTV2Watcher” application menu
-	Windows and Linux:  under the “Help” menu

Changing any setting stores the new setting, and it takes effect immediately.


<b>General Preferences</b>
@image	html	watcher-prefs-general.png

The controls in this panel set general (global) preferences for the NTV2Watcher application.
-	<b>Pre-Lock Host Buffers</b> — When checked, pre-locks host DMA buffers (which can improve performance).


<b>Color Preferences</b>
@image	html	watcher-prefs-colors.png

The controls in this panel set the color preferences for several inspectors that display numeric data.
-	<b>Generic</b> — For generic video data, sets the colors used for “unchanged” and “changed” video data.
-	<b>Ancillary</b> — For ancillary data, sets the colors used for “unchanged” and “changed” ancillary data.
-	<b>Audio</b> — For audio data, sets the colors used for “unchanged” and “changed” audio data.


<b>Cables Preferences</b>
@image	html	watcher-prefs-cables.png

The controls in this panel set the preferences for the \ref inspectorroute.
-	<b>Allow drag & drop to/from disabled sockets</b> — When checked, allows dragging new connection cables to or from disabled sockets.
-	<b>FrameStore Preview</b> — When hovering the mouse over a FrameStore widget, you can see previews of the image stored in its current frame buffer.
	-	<b>Off</b> — Disables the Preview feature.
	-	<b>Adjacent</b> — Put the preview next to the FrameStore widget.
	-	<b>In bottom-left corner</b> — Put the preview in the bottom-left corner of the Cables view.
-	<b>Animate signals in cables</b> — When checked, cables that are actively carrying a signal will display with an animation effect.



<hr size="50px">
**/
