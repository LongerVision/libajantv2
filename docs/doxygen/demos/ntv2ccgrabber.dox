/**
@page	demoapps

@section	ntv2ccgrabber		NTV2CCGrabber Demo

This command-line program “grabs” CEA-608 (and “608-over-708”) closed-caption data that may be present
in a video signal, streams it to standard output, and optionally “burns” it into the video for playout.

@image	html	ntv2ccgrabber.png

This shows a screenshot of video from a device while <b>ntv2ccgrabber</b> runs with the <b>--burn</b> option.
The status display turns red if caption data is missing or can’t be decoded, green when present and being decoded
properly, and shows other useful status information.

The NTV2CCGrabber class demonstrates…
-	the CNTV2CaptionDecoder608 and CNTV2CaptionDecoder708 classes provided in the \ref ajacc
	to decode CEA-608 or CEA-708 closed-caption data that may be present on a video stream;
-	the custom ancillary data extraction feature of AJA devices (if available);
-	using the AJAAncillaryList and AJAAncillaryData classes;
-	using a mixer/keyer widget to superimpose graphics with alpha (transparency) over live video;
-	how to react to input video format changes, including loss of signal, and keep running;
-	using an AJACircularBuffer and the producer/consumer model with AutoCirculate;
-	use the CNTV2CaptionRenderer to “burn” decoded caption text into the frame buffer at the correct
	on-screen location with the proper attributes (color, transparency, etc.).

This demo uses the \ref ajantv2 to ingest video and ancillary data, and the \ref ajacc to decode
US NTSC-based captions:
-	<b>525i:</b> EIA-608 “line 21” and/or CEA-608 in VANC;
-	<b>720p:</b> CEA-608 and/or CEA-708 (“608-in-708” only) in VANC;
-	<b>1080i5994:</b> CEA-608 or CEA-708 (“608-in-708” only) in VANC;

Although NTSC captions arenʼt technically recommended for use in any other video format, this demo
will attempt to capture most other video formats, including dual-link RGB, 2K×1080p, UHD & 4K (TSI
or square-division), and if it happens to find NTSC caption packets in the video stream, it will
decode them, as above.

The demo’s operation can be controlled by pressing certain keys on the keyboard while it’s running.
-	Press ‘1ʼ thru ‘4ʼ to change displayed caption channel to CC1 thru CC4.
-	Press ‘5ʼ thru ‘8ʼ to change displayed caption channel to TX1 thru TX4.
-	Press ‘Hʼ or ‘hʼ to toggle the heads-up-display (HUD) on or off.
-	Press ‘Oʼ or ‘oʼ to change the output on-the-fly.
-	Press ‘Pʼ or ‘pʼ to change the capture buffer pixel format on-the-fly.
-	Press ‘Qʼ or ‘qʼ to exit the demo.
-	Press ‘Sʼ or ‘sʼ to change the “608 source” on-the-fly.

@note	This demo behaves differently from the others in that it cannot be stopped using Ctrl-C.
		<b>Press ‘qʼ or ‘Qʼ to quit.</b>

@note	This demo is NTSC-only — it has no capability to decode Teletext, ARIB, etc. captions.


<h2>Command Line Syntax</h2>

<tt>ntv2ccgrabber \[OPTION \[...\]\] </tt>

Displays captured CEA608 captions from incoming video.

...where...
@code
	OPTION                                               DESCRIPTION

	-d index#, serial#, or model                         Specifies the device to use.
	--device=index#, serial#, or model                   Defaults to first device found.

	-c 1..8                                              Specifies the channel/frameStore to use.
	--channel=1..8                                       Defaults to channel 1.

	-i inputSpec                                         Specifies the device SDI input connector to use, where inputSpec
	--input=inputSpec                                    ...where inputSpec is '1|sdi1|2|sdi2|…'.  Defaults to 'sdi1'.
	                                                     Specify 'list' or '?' to display the valid inputs for the device.

	-t tcSpec                                            Specifies the timecode to use while capturing.
	--tcsource=tcSpec                                    By default, ntv2ccgrabber doesn’t capture timecode.
	                                                     Specify 'list' or '?' to display the valid timecode inputs for the device.

	-p formatSpec                                        Specifies the FrameStore pixel format to use.
	--pixelFormat=formatSpec                             Defaults to v210 (10-bit YCbCr).
	                                                     Specify 'list' or '?' to display the valid pixel formats for the device.

	-v, --vanc                                           Uses (tall) VANC frame geometry to also capture VANC data in the frame buffer.
	                                                     By default, ntv2ccgrabber uses normal frame geometry.

	--608chan=cc1|cc2|cc3|cc4|tx1|tx2|tx3|tx4,...        Specifies the CEA608 caption channel of interest.
	                                                     Legal values:   CC1 | cc1      Caption channel 1. This is the default.
	                                                                     CC2 | cc2      Caption channel 2.
	                                                                     CC3 | cc3      Caption channel 3.
	                                                                     CC4 | cc4      Caption channel 4.
	                                                                     TX1 | tx1      Text channel 1.
	                                                                     TX2 | tx2      Text channel 2.
	                                                                     TX3 | tx3      Text channel 3.
	                                                                     TX4 | tx4      Text channel 4.

	--608src=source                                      Specifies the CEA608 CC data source, where 'source' must be one of:
	                                                          default -  Best available (default).
	                                                          line21  -  Use CC data decoded from line 21.
	                                                          608vanc -  Use CC data from CEA608 packet(s) found in FB VANC lines.
	                                                          708vanc -  Use CC data found inside CEA708 packet found in FB VANC lines.
	                                                          608anc  -  Use CC data from CEA608 packet(s) found using anc extractor.
	                                                          708anc  -  Use CC data found inside CEA708 packet found using anc extractor.

	-output=stream|screen|scc|stats                      Specifies what gets written into the standard output stream:
	                                                          stream  -  A continuous stream of caption characters, as decoded.
	                                                          screen  -  Periodically shows the on-screen captions.
	                                                          scc     -  Emits Scenarist Closed Caption formatted data.
	                                                          stats   -  Periodically emits statistics from the CEA-608 decoder.

	-b                                                   Enables playout of captured video with decoded captions “burned-in” to the video.
	--burn                                               By default, ntv2ccgrabber doesn’t burn-in captions into captured video.

	--audio                                              Enables capturing embedded audio.
	                                                     By default, ntv2ccgrabber doesn’t capture embedded audio.

	-m, --multiChannel                                   Shares the device with other programs, performs minimal routing changes, and if the
	                                                     device is capable of it, configures it to allow the use of different video formats
	                                                     on other device channels.
	
	--frames {spec}                                      Specifies which device frame buffers to use for AutoCirculate capture:
                                                             numFrames[@startFrame]    Specifies frame count (and optional start frame).
	                                                         startFrame-endFrame       Explicitly specifies start and end frame numbers.

	EXIT STATUS       DESCRIPTION
	0                 Success.
	1                 Parameter error.
	2                 Runtime error.
@endcode
**/
