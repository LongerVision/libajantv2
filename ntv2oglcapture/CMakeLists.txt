project(ntv2oglcapture)

message("added ntv2oglcapture")

# include(FindOpenGL)
find_package(OpenGL REQUIRED)
set(OPENGL_LIBRARIES OpenGL::GLU)

find_package(Qt5 HINTS ${AJA_QT_DIR} COMPONENTS Core OpenGL Widgets REQUIRED)
set(QT_LIBRARIES Qt5::Core Qt5::OpenGL Qt5::Widgets)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)
set(CMAKE_INCLUDE_CURRENT_DIR ON)

set(TARGET_INCLUDE_DIRS
	${AJA_LIBRARIES_ROOT}
	${AJA_APPS_ROOT}/crossplatform/demoapps
	${AJA_GPUSTUFF_ROOT}/include
	${AJA_LIB_NTV2_ROOT}/includes
	${AJA_LIB_RETAIL_ROOT}/includes
	${AJA_LIB_RETAIL_ROOT}/services)

set(NTV2OGLCAPTURE_HEADERS
	ntv2oglcapture.h)
set(NTV2OGLCAPTURE_SOURCES
	ntv2oglcapture.cpp)

set(DEMO_APPS_SOURCES
	${CMAKE_CURRENT_SOURCE_DIR}/../ntv2democommon.cpp)
set(DEMO_APPS_HEADERS
	${CMAKE_CURRENT_SOURCE_DIR}/../ntv2democommon.h)

if (CMAKE_SYSTEM_NAME STREQUAL "Windows")
	# noop
elseif (CMAKE_SYSTEM_NAME STREQUAL "Darwin")
	find_library(FOUNDATION_FRAMEWORK Foundation)
	find_library(OPENGL_FRAMEWORK OpenGL)
	set(TARGET_LINK_LIBS ${FOUNDATION_FRAMEWORK} ${OPENGL_FRAMEWORK})
elseif (CMAKE_SYSTEM_NAME STREQUAL "Linux")
	set(TARGET_LINK_LIBS dl pthread rt)
endif()

set(TARGET_SOURCES
	${NTV2OGLCAPTURE_SOURCES}
	${NTV2OGLCAPTURE_HEADERS}
	${DEMO_APPS_SOURCES}
	${DEMO_APPS_HEADERS})

add_executable(ntv2oglcapture ${TARGET_SOURCES})
add_dependencies(ntv2oglcapture ajantv2)
target_include_directories(ntv2oglcapture PUBLIC ${TARGET_INCLUDE_DIRS})
target_link_libraries(ntv2oglcapture PUBLIC ajantv2 ${QT_LIBRARIES} ${OPENGL_LIBRARIES} ${TARGET_LINK_LIBS})

install(TARGETS ntv2oglcapture
	ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
	LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
	RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
	FRAMEWORK DESTINATION ${CMAKE_INSTALL_LIBDIR}
	PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
