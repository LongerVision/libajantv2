The 'ajalibraries/ajantv2/sdkgen' directory contains files that generate many function implementations in the NTV2 SDK.

NOTE:	The 'sdkgen' directory is private, and not intended to ship with the SDK.


ABOUT THE DEVICE FEATURES FILES IN 'ajantv2/includes' and 'ajantv2/src':

	ntv2devicefeatures.h		Declares all DeviceFeatures functions that are not generated from tables.
								This file #includes the generated 'ntv2devicefeatures.hh' header file.

	ntv2devicefeatures.cpp		Implements all DeviceFeatures functions that are not generated from tables.
								This file #includes the generated 'ntv2devicefeatures.hpp' implementation file.

	ntv2devicefeatures.hh		Contains all declarations of all functions generated by the 'ntv2devicefeatures.py' script
								from the CSV tables. A version of this file is checked into source control for the benefit of AJA
								developers, BUT IT IS NOT CANONICAL.

	ntv2devicefeatures.hpp		Contains all implementations of all functions generated by the 'ntv2devicefeatures.py' script
								from the CSV tables. A version of this file is checked into source control for the benefit of AJA
								developers, BUT IT IS NOT CANONICAL.


ABOUT THE SDKGEN FILES

	FILE                        DESCRIPTION
	ntv2devicefeatures.py       Python script that generates 'ntv2devicefeatures.hpp' and 'ntv2devicefeatures.hh' files containing
								"devicefeatures" function implementations and declarations from tables (CSV files).

	CanDo.csv                   CSV file containing rows of "NTV2DeviceCanDo" functions.

	ConversionModes.csv         CSV file containing supported per-device NTV2ConversionModes.

	DSKModes.csv                CSV file containing supported per-device NTV2DSKModes.

	Formats.csv                 CSV file containing supported per-device NTV2FrameBufferFormats.

	GetNum.csv                  CSV file containing rows of "NTV2DeviceGetNum" functions.

	InputSources.csv            CSV file containing supported per-device NTV2InputSources.

	VideoFormats.csv            CSV file containing supported per-device NTV2VideoFormats.

	Widgets.csv                 CSV file containing supported per-device NTV2WidgetIDs.


ADDING NEW DEVICES
	1) Add a column to each .csv table. Put the new DEVICE_ID_XXXXX name in the first line/row.
	2) In the new column, put a hyphen ('-') in each cell representing the row/feature that is NOT supported.
	3) In the new column, put an X ('X') in each cell representing the row/feature that IS supported.


ADDING NEW FORMATS (or other features)
	1) Add a row in the sheet that deals with the new format/feature being added.
	2) Keep the rows in enum order.
	3) In the new row, for each device/column, put a hyphen ('-') if the device does NOT support the new format/feature.
	4) In the new row, for each device/column, put an X ('X') if the device DOES support the new format/feature.


RUNNING THE PYTHON SCRIPT
	*	The script needs to run BEFORE compiling the SDK.
	*	Assuming the current directory at build time is 'ajalibraries/ajantv2/driver/mac' ...
	     $  ../../sdkgen/ntv2devicefeatures.py   --csv ../../sdkgen   --verbose
	*	If the script succeeds, the generated files will be in the current directory.
	*	Move them to where they belong:
	     $  mv -v  ntv2devicefeatures.hh  ../../includes/
	     $  mv -v  ntv2devicefeatures.hpp  ../../src/
	*	See the 'sdkgen/ntv2devicefeatures.py' file for detailed information about the command line parameters.
